{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/observer/array.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["export function isObject(data) {\n  return typeof data ===  'object' && typeof data !== null\n}\n\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    configurable: false,\n    enumerable: false,\n    value\n  })\n}\n\n// 取值时实现代理效果\nexport function proxy(vm, source , key) {\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[source][key]\n    },\n    set (newValue) {\n      vm[source][key] = newValue\n    }\n  })\n}\n\nconst LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed'\n]\n\n// 生命周期合并策略\nconst strats = {}\n\nfunction mergeHook (parentVal, childVal) {\n  if (childVal) {\n    if (parentVal) {\n      return parentVal.concat(childVal)\n    } else {\n      return [childVal]\n    }\n  } else {\n    return parentVal\n  }\n}\n\nLIFECYCLE_HOOKS.forEach(hook => {\n  strats[hook] = mergeHook\n})\n\nexport function mergeOptions (parent, child) {\n  const option = {}\n  //以child为准\n  for (let key in parent) {\n    mergeField(key) \n  }\n  // 如果child的属性，parent中没有，需要遍历child\n\n  for (let key in child) {\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key)\n    }\n  }\n\n  // 默认的合并策略，有些属性需要特殊的合并方式，生命周期合并，会把所有的相同生命周期合并到一个数组中，然后依次执行\n  function mergeField (key) {\n    if (strats[key]) {\n      return option[key] = strats[key](parent[key], child[key])\n    }\n    if (typeof parent[key] === 'object' && typeof child[key] === 'object') {\n      option[key] = {\n        ...parent[key],\n        ...child[key]\n      }\n    } else if (child[key] == null) {\n      option[key] = parent[key]\n    } else {\n      option[key] = child[key]\n    }\n  }\n\n  return option\n}","\n\n// 需要重写数组的某些方法 push pop shift unshift reverse sort splice,会导致数组本身发生变化\n\n// 首先要保存数组原先的方法\n\nconst oldArrayMethods = Array.prototype\n\n// 用户调用方法则是： value.__proto__ = arrayMethods\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = [\n  'push',\n  'shift',\n  'pop',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\nmethods.forEach(method => {\n  arrayMethods[method] = function (...args) {\n    console.log(method, '调用')\n\n    const result = oldArrayMethods[method].apply(this, args) // 调用原生方法，让数组的内容真正发生变化，并返回\n    // push unshift 添加的元素也有可能是对象，所以需要对这操作元素的方法的传入数据的进行监测\n    // splice, 如果传入三个参数时也需要进行监测\n    let inserted // 当前要插入的元素\n    switch(method) {\n      case 'push':\n      case 'unshift':\n        inserted = args // 此时的args是个数组\n        break\n      case 'splice':\n        inserted = args.slice(2)\n      default:\n        break\n    }\n\n    if (inserted) {\n      this.__ob__.observerArray(inserted)\n    }\n\n    return result\n  }\n})","let id = 0\nclass Dep {\n  constructor() {\n    this.id = id++\n    this.subs = []\n  }\n\n  depend() {\n    this.subs.push(Dep.target) // 观察者模式\n  }\n\n  notify() {\n    this.subs.forEach(watcher => watcher.update())\n  }\n}\n\nlet stack = [] // 使用一个栈来保存watcher\nexport function pushTarget(watcher) {\n  // 使用一个Dep静态属性来指向当前watcher\n  Dep.target =  watcher\n  stack.push(watcher)\n}\n\nexport  function popTarget() {\n  stack.pop()\n  Dep.target = stack[stack.length - 1]\n}\n\nexport default Dep","// 原理是使用object.defineProperty()\nimport { isObject, def } from '../utils/index'\nimport { arrayMethods } from './array'\nimport Dep from './dep'\n \nclass Observer{\n  constructor(data) {\n    if (Array.isArray(data)) {\n      // 如果是数组的话，不会对索引进行观测，因为会导致性能的问题\n      // 如果元素是对象是，不给对象赋值的话，那么观测索引就没有什么意义，造成性能浪费\n      // 因为数组对象中的属性也进行了观测\n\n      // 需要在其他地方使用Observer的实例的方法或者属性，所以给监测的对象加一个属性__ob__表示该对象已经被监测\n      // 后续可以知道该值是否是被监测过的\n      // 这样子写为了防止调用栈溢出 this.observerArray\n      def(data, '__ob__', this)\n\n      // 如果数组内是对象，再去监测\n      // 数组调用方法时，会通过原型链进行查找，如果找到我们改写的方法，则直接使用，没有，则会继续向上查找\n      data.__proto__ = arrayMethods\n      this.observerArray(data)\n    } else {\n      this.walk(data) // 对对象进行监控劫持\n    }\n  }\n  observerArray(data) {\n    for (let i = 0; i < data.length; i++) {\n      // 监控数组的每一项\n      observe(data[i])\n    }\n  }\n  walk(data) {\n    let keys = Object.keys(data)\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i]\n      let value = data[key]\n      defineReactive(data, key, value)\n    }\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  let dep = new Dep()\n  // 如果data的属性值是对象，则再进行数据劫持\n  observe(value) // 递归实现数据检测, 开发优化点： 不要嵌套太深的数据结构，不然性能会损耗\n  Object.defineProperty(data, key, {\n    configurable: true,\n    enumerable: true,\n    get() { // 获取值的时候做一些操作\n      // 每个属性都会有一个watcher\n      // 每次取值的时候都把watcher存起来\n      if (Dep.target) { // 如果当前有watcher\n        dep.depend() // 需要将watcher存起来，等到 数据更新的时候，再去执行watcher\n      }\n      return value\n    },\n    set(newVal) { // 设置值的时候也可以做一些操作\n      if (value === newVal) return\n      console.log('更新数据')\n      // 如果用户自定义的对象赋值给data中的属性，也要进行劫持\n      observe(newVal)\n      value = newVal\n      dep.notify() // 通知依赖的watcher进行更新操作\n    }\n  })\n}\n\nexport function observe (data) {\n  // 判断data是否是对象\n  let isObj = isObject(data)\n  if (!isObj) return\n  return new Observer(data) // 因为功能比较多，使用类观测数据\n}","import { observe } from './observer/index'\nimport { proxy } from './utils/index'\nexport function initState(vm) {\n  const opts = vm.$options\n  // 初始化数据\n  // vue的数据来源： 属性 方法 数据 计算属性 watch\n\n  if(opts.props) {\n    initProps(vm)\n  }\n\n  if(opts.methods) {\n    initMethods(vm)\n  }\n\n  if(opts.data) {\n    initData(vm)\n  }\n\n  if(opts.computed) {\n    initComputed(vm)\n  }\n\n  if(opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps() {}\nfunction initMethods() {}\nfunction initData(vm) {\n  // 数据改变视图更新\n  let data = vm.$options.data\n  // 为了data是函数时，执行时不改变this的指向需要绑定this\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\n  \n  // 这里做一层代理，因为现在只能通过vm._data访问到data中的数据，希望通过vm.data访问，原理是\n  // Object.defineProperty()\n  for (let key in data) {\n    proxy(vm, '_data', key)\n  }\n\n  // 监控数据，响应式原理\n  observe(data)\n}\nfunction initComputed() {}\nfunction initWatch() {}","import { pushTarget,  popTarget } from './dep.js'\nlet id = 0 // 给每一个watcher一个标识符\nclass Watcher {\n\n  constructor(vm, exprOrFn, callback, options) {\n    this.vm = vm\n    this.callback = callback\n    this.options = options\n    this.id = id++\n    this.getter = exprOrFn // 将内部传过来的回调函数，放到getter属性上\n\n    this.get() // 调用get方法，会让渲染watcher执行\n  }\n\n  get() {\n    // 在执行渲染watcher之前，把该watcher存起来，执行完后再抛出\n    pushTarget(this)\n    this.getter()\n    popTarget()\n  }\n\n  update() {\n    this.get()\n  }\n}\n\nexport default Watcher","export function patch (oldNode, vnode) {\n  // console.log(oldNode, vnode)\n  // 递归创建真实节点，替换掉老的节点\n\n  const isRealElement = oldNode.nodeType // 虚拟DOM没有这个属性，只有DOM上才有\n\n  if (isRealElement) {\n    /**\n     * 首先找到当前元素的父元素，然后根据vnode创建真实DOM\n     * 把创建的DOM插入到当前节点的下一个兄弟节点之前，然后在去删除当前节点\n     * 这样子，就保证了插入新的节点在页面上位置不会发生变化\n     */\n    const oldElm = oldNode\n    const parentElm = oldElm.parentNode \n\n    let el = createElm(vnode)\n    parentElm.insertBefore(el, oldElm.nextSibling)\n    parentElm.removeChild(oldElm)\n\n    return el\n  }\n\n  function createElm (vnode) { // 根据虚拟节点创建真实节点\n    // 是标签还是文本\n    let {tag, children, data, key, text} = vnode\n    if (typeof tag === 'string') {\n      // 标签\n      vnode.el = document.createElement(tag)\n\n      updateProperties(vnode)\n\n      vnode.children.forEach(child => {\n        return vnode.el.appendChild(createElm(child))\n      })\n\n    } else {\n      // 虚拟DOM上映射真实DOM，方便后续操作\n      vnode.el = document.createTextNode(text)\n    }\n\n    return vnode.el\n  }\n\n  function updateProperties (vnode) {\n    const newProps = vnode.data\n    // 把属性放到当前节点 vnode.el\n    const el = vnode.el\n    console.log(newProps)\n    for (let key in newProps) {\n      // 属性为style或者是class的需要特殊处理\n      if (key === 'style') {\n        for (let styleName in newProps.style) {\n          el.style[styleName] = newProps.style[styleName]\n        }\n      } else if (key === 'class') {\n        el.className = newProps.class\n      } else {\n        el.setAttribute(key, newProps[key])\n      }\n    }\n  \n  }\n\n}","import Watcher from './observer/watcher'\nimport { patch } from './vdom//patch'\nexport function lifecycleMixin(Vue) {\n  Vue.prototype._update = function (vnode) {\n    // 返回的是真实的DOM\n\n    const vm = this\n    // 通过虚拟节点，渲染出真实的DOM， 然后替换掉真实的$el\n    vm.$el = patch(vm.$el, vnode) // 这里是新旧做比对\n\n  }\n} \n\n\nexport function mountComponent(vm, el) {\n  const options = vm.$options // 有render函数\n  vm.$el = el // 真实的DOM元素,是页面上获取的DOM（旧的）\n\n  // 渲染页面\n\n  // 在渲染页面之前，调用一下\n  callHook(vm, 'beforeMount') // 这个时候可以拿到这是的DOM但是数据并没有渲染上去\n  \n  // Watcher是用来渲染的\n  // vm._render 通过解析的render方法 返回的是虚拟dom，\n  // vm_update返回的是真实的dom\n  let updataComponent = () => { // 无论是更新还是渲染都会用到此方法\n\n    // vm._render 返回的是虚拟dom，vm_update返回的是真实的dom（现在是新的，并且数据都已经填充完成）\n    vm._update(vm._render())\n\n    // 只有第一次才会解析成AST语法树，后面的更新，只会去做比对然后更新\n  }\n\n  // 然后在一个Watcher类，调用updataComponent函数\n\n  // 渲染watcher，每个组件都有一个watcher\n  new Watcher(vm, updataComponent, () => {}, true) // true表示它是一个渲染watcher\n\n  // 在渲染页面之后，调用一下\n  callHook(vm, 'mounted')// 这个时候数据完成了渲染\n}\n\nexport function callHook (vm, hook) {\n  const hanlders = vm.$options[hook]\n  if (hanlders) {\n    for (let i = 0; i < hanlders.length; i++) {\n      hanlders[i].call(vm)\n    }\n  }\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n// 把获取的HTML解析成ast语法树\n\nexport function parseHTML (html) {\n  let root = null // ast语法树根节点\n  let currentParent = null // 标记当前元素的父元素\n  let stack = [] // 栈用来保存创建好的ast节点，为了在匹配结束标签的时候，看看是否匹配的上（即元素是否正确闭合）利用栈的特性（遇到结束标签，抛出栈顶元素）\n  const ELEMENT_TYPE = 1\n  const TEXT_TYPE = 3\n\n  // 根据元素创建ast树的节点 \n  function createASTElement(tagName, attrs) {\n    return {\n      tag: tagName,\n      type: ELEMENT_TYPE,\n      attrs,\n      children: [],\n      parent: null\n    }\n  }\n\n\n  function start (tagName, attrs) {\n    // console.log('开始标签：', tagName, attrs)\n    let element = createASTElement(tagName, attrs)\n\n    // console.log(currentParent)\n    // 先查看根节点是否存在，\n    if (!root) {\n      root = element\n    }  \n    // 开始标签可以看成是父级标签\n    // 把当前元素标记成父ast树\n    currentParent = element\n    stack.push(element)\n  }\n  function chars(text) {\n    // console.log('文本是：',text)\n    // 文本标签肯定是子元素\n    text = text.replace(/\\s/g, '')\n    if (text) {\n      currentParent.children.push({\n        text,\n        type: TEXT_TYPE\n      })\n    }\n  }\n  //  <div><p></p></div>  ['div', 'p']\n  function end(tagName) {\n    // console.log('结束标签：', tagName)\n    // 这里开始匹配标签闭合是否正确, 抛出栈顶元素\n    let element = stack.pop()\n    if (element) {\n      if (element.tag === tagName) {\n        // 获取栈内最后一个元素，此元素是抛出元素的父元素\n        currentParent = stack[stack.length - 1]\n        // console.log(currentParent)\n        if (currentParent) {\n          element.parent = currentParent\n          currentParent.children.push(element)\n        }\n      }\n    }\n  }\n  // 不停的解析html字符串\n  while(html) {\n    let textEnd = html.indexOf('<')\n    // 如果是0的话，说明匹配的可能是开始标签或者是结束标签，但都是代表着标签的开始\n    if (textEnd === 0) {\n      let startTagMatch = parseStartTag() // 这个方法是用来匹配标签名和属性的\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        // console.log(startTagMatch)\n        continue // 如果匹配的是开始标签就继续在匹配\n      }\n\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n    }\n\n    // 如果textEnd>=0的话，说明是一段文本\n    let text = ''\n    if(textEnd >= 0) {\n      text = html.substring(0, textEnd) \n    }\n    if (text) {\n      chars(text)\n      advance(text.length)\n      // console.log(html, textEnd)\n      // break\n    }\n  }\n\n  function advance(n) {\n    html = html.substring(n)\n  }\n\n\n  function parseStartTag() {\n    let start = html.match(startTagOpen)\n    if (start) {\n      // 开始组装数据\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      // 匹配标签名完成，删除\n      advance(start[0].length)\n      // 然后再去匹配属性\n      // 匹配属性，需要注意标签内是否有属性\n      let end = null\n      let attr = null\n      while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        match.attrs.push({\n          name: attr[1], \n          value: attr[3] || attr[4] || attr[5]\n        })\n        advance(attr[0].length)\n      }\n      // end匹配的开始标签的'>', 如果匹配到，则表示这个标签匹配完成\n      if (end) {\n        advance(end[0].length)\n        return match\n      }\n    }\n    // console.log(start)\n    // console.log(html)\n  }\n  return root\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction genProps (attrs) {\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i]\n    if (attr.name === 'style') { // style特殊处理\n      let obj = {}\n      let styleValue = attr.value.split(';')\n      styleValue.forEach(item => {\n        let [key, value] = item.trim().split(':')\n        obj[key] = value && value.trim()\n      })\n      attr.value = obj\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  return `{${str.slice(0, -1)}}`\n}\n\nfunction  genChildren(el) {\n  let children =  el.children\n  if (children && children.length) {\n    return `${children.map(c => gen(c)).join(',')}`\n  }else {\n    return false\n  }\n}\n\nfunction gen(node) {\n  if (node.type === 1) {\n    return generate(node)\n  } else {\n    // 现在是文本和变量\n    let text = node.text // <div>a {{  name  }} b{{age}} c</div>里面的text，a {{  name  }} b{{age}} c\n    let tokens = []\n    let match = null\n    let index = null\n    // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处 正则匹配的懒惰性\n    let lastIndex = defaultTagRE.lastIndex = 0\n    while(match = defaultTagRE.exec(text)) {\n      index = match.index\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n      }\n      tokens.push(`_s(${match[1].trim()})`)\n      lastIndex = index + match[0].length\n    }\n    // console.log(defaultTagRE.exec(text))\n     // 这里匹配的是最后的文本 “ c”\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\n    }\n    return `_v(${tokens.join('+')})`\n  }\n}\n\nexport function generate (el) {\n  let children = genChildren(el)\n  let code = `_c(\"${el.tag}\", ${\n   el.attrs.length ? genProps(el.attrs) : 'undefined'\n   // 逗号写在里面是为了，没有孩子的时候，不需要逗号\n  }${children ? `,${ children }` : ''})`\n\n  return code\n}","\n// ast语法树是用对象来描述原生语法的，虚拟DOM是用对象来描述DOM节点的\n\nimport { parseHTML } from './parser-html'\nimport { generate } from './generate'\n\nexport function compileToFunction(template) {\n\n  // 解析HTML字符串，就是用正则去匹配HTML的内容，匹配到了，则就删除在HTML中的对应内容，然后在进行下一次匹配，依次循环\n  // 然后再去解析成ast语法树\n  let root = parseHTML(template)\n  // console.log(root)\n\n  // 需要把ast语法树生成render函数 就是字符串的拼接，模版引擎\n\n\n  // 核心思路就是将模版转化成下面这段字符串\n  // <div id=\"app\"><p>hello {{name}}</p> hello</div>\n  // 将ast树再次转化成js语法\n  // _c: 第一个参数是标签名，第二参数是属性，第三个参数是子元素\n  // _c(\"div\", {id: app}, _c(\"p\", undefined, _v(\"hello\" + _s(name))), _v(\"hello\"))\n  \n  let code = generate(root)\n  // _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello')) \n  // 所有的模板引擎实现 都需要new Function + with\n  // 步骤： 拼接字符串， 添加with， new Function生成函数\n  let renderFn = new Function(`with(this){ return ${code} }`)\n  // console.log(renderFn)\n  return renderFn\n}","// 在Vue原型上添加一个init方法\n// 暴露出去是为了index.js文件可以引入这样子就很清晰每一块的作用\nimport {initState} from './state'\n\nimport { mountComponent, callHook } from './lifecycle'\nimport { mergeOptions } from './utils/index'\n\nimport { compileToFunction } from './compiler/index'\nexport function initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    // 数据劫持\n\n    const vm =  this\n    // 将用户传递的，和全局的进行合并\n    // vm.constructor.options保证了谁调用就用谁的options，不一定是Vue上的 \n    vm.$options =  mergeOptions(vm.constructor.options, options)\n    // 此时已经合并完生命周期了，然后就需要在某个时期，调用一下存好的钩子函数就可以了\n    // 就是callHoook,\n    console.log(vm.$options)\n    callHook(vm, 'beforeCreate')\n\n    initState(vm)\n\n    callHook(vm, 'created')\n\n    // 开始挂载渲染页面\n    // 如果用户传入了el属性，需要将页面渲染出来\n    // 如果用户传入了el属性，就要实现挂载流程\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n\n  // 实现挂载流程\n  Vue.prototype.$mount = function(el) {\n    const vm = this\n    const options = vm.$options\n    // 获取el元素\n    el = document.querySelector(el)\n\n    // 默认先查找有没有render方法，没有，则会采用template， template也没有的话\n    // 就用el的内容代替template\n    // render-> template -> el\n\n    if(!options.render) {\n      // 如果用户自己写的render函数则使用，没有则需要把模版进行编译然后在赋值给options上的render\n      // 对模版进行编译\n      let template = options.template\n      if(!template && el) {\n        template = el.outerHTML\n        // 然后就需要把template转换成render方法\n        const render = compileToFunction(template)\n        options.render = render\n      }\n    }\n\n    // 开始渲染当前组件，并挂载这个组件\n    mountComponent(vm, el)\n\n  }\n\n}","export function createElement (tag, data = {}, ...children) {\n  // console.log(tag, data, children)\n  let key = data.key\n  if (key) {\n    delete data.key\n  }\n  return vnode(tag, data, key, children, undefined)\n}\n\nexport function createTextNode (text) {\n  // console.log(text)\n  return vnode(undefined, undefined, undefined, undefined, text)\n}\n\nfunction vnode(tag, data, key, children, text) {\n  return {\n    tag,\n    data,\n    key,\n    children,\n    text\n  }\n}\n\n// 虚拟节点 就是通过_c _v实现用对象描述DOM的操作（本质上还是对象）\n\n// 1）将template转换成ast语法树 -> 生成render方法 -> 生成虚拟DOOM -> 真实的DOM\n//    更新： 重新生成虚拟DOM -> 更新DOM","import { createElement, createTextNode } from './vdom/create-element'\n\nexport function renderMixin(Vue) {\n  // 还是为了Vue原型上添加方法，方便在其他地方使用\n\n  // _c 创建元素虚拟节点 参数：tag, props, children\n  // _v 创建文本的虚拟节点\n  // _s JSON.stringify()\n\n  Vue.prototype._c = function () {\n    return createElement(...arguments) // _c内有由ast树组合的参数,如果不明白参数请看compiler/index下的render\n  }\n\n  Vue.prototype._v = function (text) {\n    return createTextNode(text)\n  }\n\n  Vue.prototype._s = function (val) {\n    // 这里的参数传入的是变量，所以根据变量的类型，转成字符串\n    return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val)\n  }\n\n  Vue.prototype._render = function () {\n    // 首先获取实例\n    const vm = this\n    const { render } = vm.$options\n    \n    // console.log(render)\n    //这里是执行之前生成的render函数，还需要传入当前的实例，with(this)， 获取到实例上对应的值\n    // 太重要了！！！\n    let vnode = render.call(vm) // 这里执行了，with特性，所以变量都可以获取到data中的值\n    // console.log(vnode)\n    return vnode\n  }\n}","import { mergeOptions } from '../utils/index'\nexport function initGlobalAPI (Vue) {\n  // 整合了所有的全局相关的内容\n  Vue.options = {}\n\n  Vue.mixin = function (mixin) {\n\n    // 合并现有的全局上的options， 和传入的mixin对象\n    // 如何实现两个对象的合并\n    this.options = mergeOptions(this.options, mixin)\n\n  }\n\n  // 生命周期合并策略\n\n  Vue.mixin({\n    a: 1, \n    beforeCreate() {\n      console.log('mixin 1')\n    }\n  })\n\n  Vue.mixin({\n    b: 2, \n    a: 4,\n    beforeCreate() {\n      console.log('mixin 2')\n    }\n  })\n\n  console.log(Vue.options)\n\n}","import { initMixin } from './init'\nimport { renderMixin } from './render'\nimport { lifecycleMixin } from './lifecycle'\n\nimport { initGlobalAPI }  from './initGlobalAPI/index'\n\n// index.js vue入口文件\nfunction Vue (options) {\n  this._init(options)\n}\n\n// 通过引入文件方式给Vue原型上添加方法\n// 也就是可以通过Vue实例就可以访问的\ninitMixin(Vue)\nrenderMixin(Vue)\nlifecycleMixin(Vue)\n\n// 下面是给Vue添加方法\n// Vue添加全局变量和函数，也就是静态方法\n\n// 初始化全局API\ninitGlobalAPI(Vue)\n\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","configurable","enumerable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","forEach","hook","mergeOptions","parent","child","option","mergeField","hasOwnProperty","oldArrayMethods","Array","prototype","arrayMethods","create","methods","method","args","console","log","result","apply","inserted","slice","__ob__","observerArray","id","Dep","constructor","subs","depend","push","target","notify","watcher","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","__proto__","walk","i","observe","keys","defineReactive","dep","newVal","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","Watcher","exprOrFn","callback","options","getter","patch","oldNode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","el","createElm","insertBefore","nextSibling","removeChild","tag","children","text","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","class","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","callHook","updataComponent","_render","hanlders","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","type","start","element","chars","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","styleValue","split","item","trim","JSON","stringify","genChildren","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","code","compileToFunction","template","renderFn","Function","initMixin","_init","$mount","querySelector","render","outerHTML","undefined","renderMixin","_c","arguments","_v","_s","val","initGlobalAPI","mixin","a","beforeCreate","b"],"mappings":"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"}