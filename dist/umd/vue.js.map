{"version":3,"file":"vue.js","sources":["../../src/utils/index.js","../../src/observer/array.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/utils/next-tick.js","../../src/observer/schedular.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/mixin.js","../../src/initGlobalAPI/extend.js","../../src/initGlobalAPI/const.js","../../src/initGlobalAPI/assets.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["export function isObject(data) {\n  return typeof data ===  'object' && typeof data !== null\n}\n\nexport function isReservedTag (tagName) {\n  let str = 'p,div,span,input,button'\n  let obj = []\n  str.split(',').forEach(tag => {\n    obj[tag] = true\n  })\n\n  return obj[tagName]\n}\n\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    configurable: false,\n    enumerable: false,\n    value\n  })\n}\n\n// 取值时实现代理效果\nexport function proxy(vm, source , key) {\n  Object.defineProperty(vm, key, {\n    get () {\n      return vm[source][key]\n    },\n    set (newValue) {\n      vm[source][key] = newValue\n    }\n  })\n}\n\nconst LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed'\n]\n\n// 生命周期合并策略\nconst strats = {}\n\nfunction mergeHook (parentVal, childVal) {\n  if (childVal) {\n    if (parentVal) {\n      return parentVal.concat(childVal)\n    } else {\n      return [childVal]\n    }\n  } else {\n    return parentVal\n  }\n}\n\nLIFECYCLE_HOOKS.forEach(hook => {\n  strats[hook] = mergeHook\n})\n\nfunction mergeAssets (parentVal, childVal) {\n  // 如果子类有components则直接获取，如果没有，则通过res.__proto__访问父类的components\n  const res  = Object.create(parentVal) \n  if (childVal) {\n    for (let key in childVal) {\n      res[key] = childVal[key]\n    }\n  }\n  return res\n}\n// 组件的合并策略\nstrats.components = mergeAssets\n\nexport function mergeOptions (parent, child) {\n  const option = {}\n  //以child为准\n  for (let key in parent) {\n    mergeField(key) \n  }\n  // 如果child的属性，parent中没有，需要遍历child\n\n  for (let key in child) {\n    if (!parent.hasOwnProperty(key)) {\n      mergeField(key)\n    }\n  }\n\n  // 默认的合并策略，有些属性需要特殊的合并方式，生命周期合并，会把所有的相同生命周期合并到一个数组中，然后依次执行\n  function mergeField (key) {\n    if (strats[key]) {\n      return option[key] = strats[key](parent[key], child[key])\n    }\n    if (typeof parent[key] === 'object' && typeof child[key] === 'object') {\n      option[key] = {\n        ...parent[key],\n        ...child[key]\n      }\n    } else if (child[key] == null) {\n      option[key] = parent[key]\n    } else {\n      option[key] = child[key]\n    }\n  }\n\n  return option\n}","\n\n// 需要重写数组的某些方法 push pop shift unshift reverse sort splice,会导致数组本身发生变化\n\n// 首先要保存数组原先的方法\n\nconst oldArrayMethods = Array.prototype\n\n// 用户调用方法则是： value.__proto__ = arrayMethods\n// arrayMethods.__proto__ = oldArrayMethods\nexport const arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = [\n  'push',\n  'shift',\n  'pop',\n  'unshift',\n  'reverse',\n  'sort',\n  'splice'\n]\n\nmethods.forEach(method => {\n  arrayMethods[method] = function (...args) {\n    console.log(method, '调用')\n    // console.log(this)\n    const result = oldArrayMethods[method].apply(this, args) // 调用原生方法，让数组的内容真正发生变化，并返回\n    // push unshift 添加的元素也有可能是对象，所以需要对这操作元素的方法的传入数据的进行监测\n    // splice, 如果传入三个参数时也需要进行监测\n    let inserted // 当前要插入的元素\n    let ob = this.__ob__\n    switch(method) {\n      case 'push':\n      case 'unshift':\n        inserted = args // 此时的args是个数组\n        break\n      case 'splice':\n        inserted = args.slice(2)\n      default:\n        break\n    }\n\n    if (inserted) {\n      ob.observerArray(inserted) // 将新增属性继续监测\n    }\n\n    ob.dep.notify() // 如果用户调用了数组方法 我会通知当前这个dep去更新\n    \n    return result\n  }\n})","let id = 0\nclass Dep {\n  constructor() {\n    this.id = id++\n    this.subs = []\n  }\n  addSub (watcher) {\n    this.subs.push(Dep.target)\n  }\n  depend() {\n    // 此时的Dep.target就是watcher，现在这个处理方式会重复存放watcher\n    // this.subs.push(Dep.target) // 观察者模式\n\n    // 让这个watcher记住我当前的dep,\n    // this就是Dep的实例\n    // 通过在watcher里记住这个dep\n    Dep.target.addDep(this)\n  }\n\n  notify() {\n    this.subs.forEach(watcher => watcher.update())\n  }\n}\n\nlet stack = [] // 使用一个栈来保存watcher\nexport function pushTarget(watcher) {\n  // 使用一个Dep静态属性来指向当前watcher\n  Dep.target =  watcher\n  stack.push(watcher)\n}\n\nexport  function popTarget() {\n  stack.pop()\n  Dep.target = stack[stack.length - 1]\n}\n\nexport default Dep","// 原理是使用object.defineProperty()\nimport { isObject, def } from '../utils/index'\nimport { arrayMethods } from './array'\nimport Dep from './dep'\n \nclass Observer{\n  constructor(data) {\n    this.dep = new Dep // 给数组用的\n    // 如果是数组的话，不会对索引进行观测，因为会导致性能的问题\n    // 如果元素是对象是，不给对象赋值的话，那么观测索引就没有什么意义，造成性能浪费\n    // 因为数组对象中的属性也进行了观测\n\n    // 需要在其他地方使用Observer的实例的方法或者属性，所以给监测的对象加一个属性__ob__表示该对象已经被监测\n    // 后续可以知道该值是否是被监测过的\n    // 这样子写为了防止调用栈溢出 this.observerArray\n    def(data, '__ob__', this)\n    if (Array.isArray(data)) {\n\n      // 如果数组内是对象，再去监测\n      // 数组调用方法时，会通过原型链进行查找，如果找到我们改写的方法，则直接使用，没有，则会继续向上查找\n      data.__proto__ = arrayMethods\n      this.observerArray(data)\n    } else {\n      this.walk(data) // 对对象进行监控劫持\n    }\n  }\n  // 对数组进行监控劫持\n  observerArray(data) {\n    for (let i = 0; i < data.length; i++) {\n      // 监控数组的每一项\n      observe(data[i])\n    }\n  }\n  // 对对象进行监控劫持\n  walk(data) {\n    let keys = Object.keys(data)\n    for (let i = 0; i < keys.length; i++) {\n      let key = keys[i]\n      let value = data[key]\n      defineReactive(data, key, value)\n    }\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  let dep = new Dep()\n  // 如果data的属性值是对象，则再进行数据劫持\n  // 递归实现数据检测, 开发优化点： 不要嵌套太深的数据结构，不然性能会损耗\n  let childob = observe(value) // 给数组的用的\n  Object.defineProperty(data, key, {\n    configurable: true,\n    enumerable: true,\n    get() { // 获取值的时候做一些操作\n      // 每个属性都会有一个watcher\n      // 每次取值的时候都把watcher存起来\n      if (Dep.target) { // 如果当前有watcher\n        dep.depend() // 需要将watcher存起来，等到 数据更新的时候，再去执行watcher\n        // 多次存入watcher时，就会重复存放所以需要去重\n\n        // console.log(dep.subs)\n        // console.log(childob, value)\n        if (childob) { // 数组的依赖收集\n          childob.dep.depend() // 收集了数组的相关依赖\n          if (Array.isArray(value)) {\n            dependArray(value)\n          }\n        }\n      }\n      return value\n    },\n    set(newVal) { // 设置值的时候也可以做一些操作\n      if (value === newVal) return\n      console.log('更新数据')\n      // 如果用户自定义的对象赋值给data中的属性，也要进行劫持\n      observe(newVal)\n      value = newVal\n      dep.notify() // 通知依赖的watcher进行更新操作\n    }\n  })\n}\n\nfunction dependArray (value) {\n  for (let i = 0; i < value.length; i++) {\n    value[i].__ob__ && value[i].__ob__.dep.depend() // 对数组中的数组进行依赖收集\n    if (Array.isArray(value[i])) {\n      dependArray(value[i])\n    }\n  }\n}\n\nexport function observe (data) {\n  // 判断data是否是对象\n  let isObj = isObject(data)\n  if (!isObj) return\n  return new Observer(data) // 因为功能比较多，使用类观测数据\n}","import { observe } from './observer/index'\nimport { proxy } from './utils/index'\nexport function initState(vm) {\n  const opts = vm.$options\n  // 初始化数据\n  // vue的数据来源： 属性 方法 数据 计算属性 watch\n\n  if(opts.props) {\n    initProps(vm)\n  }\n\n  if(opts.methods) {\n    initMethods(vm)\n  }\n\n  if(opts.data) {\n    initData(vm)\n  }\n\n  if(opts.computed) {\n    initComputed(vm)\n  }\n\n  if(opts.watch) {\n    initWatch(vm)\n  }\n}\n\nfunction initProps() {}\nfunction initMethods() {}\nfunction initData(vm) {\n  // 数据改变视图更新\n  let data = vm.$options.data\n  // 为了data是函数时，执行时不改变this的指向需要绑定this\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\n  \n  // 这里做一层代理，因为现在只能通过vm._data访问到data中的数据，希望通过vm.data访问，原理是\n  // Object.defineProperty()\n  for (let key in data) {\n    proxy(vm, '_data', key)\n  }\n\n  // 监控数据，响应式原理\n  observe(data)\n}\nfunction initComputed() {}\nfunction initWatch() {}","// nextTick在vue源码中也有使用，所以实现把源码中的回调函数先放入队列中\n// 再把用户自定义的nextTick放入队列中\nlet callbacks = [] \nlet waiting = false\nfunction flushCallback () {\n  callbacks.forEach(callback => callback())\n  waiting = false\n}\n// 多次调用nextTick\n// waiting，等callbakcs里面的函数执行完之后，再去添加下一轮的回调函数\n// 如果没有waiting的话，就会一有callback就会执行回调函数\nexport function nextTick (cb) {\n  callbacks.push(cb)\n  if (!waiting) {\n    setTimeout(flushCallback, 0)\n    waiting = true\n  }\n}","import { nextTick } from '../utils/next-tick'\n\nlet queue = [] // 这里存放的等待更新视图的watcher\nlet has = {} // 判断是否已经有了该watcher\nfunction flushSchedularQueue () {\n  queue.forEach(watcher => watcher.run())\n  queue = []\n  has = {}\n}\nexport function queueWatcher (watcher) {\n  let id = watcher.id\n  if (!has[id]) {\n    queue.push(watcher)\n    has[id] = true\n    nextTick(flushSchedularQueue)\n    // setTimeout(flushSchedularQueue, 0)\n  }\n}","import { pushTarget,  popTarget } from './dep.js'\nimport { queueWatcher } from './schedular.js'\nlet id = 0 // 给每一个watcher一个标识符\nclass Watcher {\n\n  constructor(vm, exprOrFn, callback, options) {\n    this.vm = vm\n    this.callback = callback\n    this.options = options\n    this.id = id++\n    this.getter = exprOrFn // 将内部传过来的回调函数，放到getter属性上\n    this.depsId = new Set()\n    this.deps = []\n    this.get() // 调用get方法，会让渲染watcher执行\n  }\n\n  addDep (dep) { // watcher里不能放重复的dep，dep里不能放重复的watcher\n    let id  = dep.id\n    if (!this.depsId.has(id)) {\n      this.depsId.add(id)\n      this.deps.push(dep)\n      // 然后再让dep里存放watcher\n      dep.addSub(this)\n    }\n  }\n\n  get() {\n    // 在执行渲染watcher之前，把该watcher存起来，执行完后再抛出\n    pushTarget(this)\n    this.getter()\n    popTarget()\n  }\n\n  // 现在是每次更新都会立即去渲染数据，需要改成等数据操作完成之后，再去更新视图，\n  // 所以就是可以添加一个watcher队列，等所有的数据操作完成之后再去更新视图即再来调用this.get()\n  update() {\n    // console.log('update')\n    // this.get()\n    queueWatcher(this)\n  }\n\n  run () { // 这个函数是在等所有的数据操作完成之后再去更新视图\n    this.get()\n  }\n}\n\nexport default Watcher","export function patch (oldNode, vnode) {\n  // 递归创建真实节点，替换掉老的节点\n\n  if (!oldNode) {\n    // 此时是解析组件，因为组件在挂载时传入的参数为空\n    return createElm(vnode)\n  } else {\n    const isRealElement = oldNode.nodeType // 虚拟DOM没有这个属性，只有DOM上才有\n\n    if (isRealElement) {\n      /**\n       * 首先找到当前元素的父元素，然后根据vnode创建真实DOM\n       * 把创建的DOM插入到当前节点的下一个兄弟节点之前，然后在去删除当前节点\n       * 这样子，就保证了插入新的节点在页面上位置不会发生变化\n       */\n      const oldElm = oldNode\n      const parentElm = oldElm.parentNode \n  \n      let el = createElm(vnode)\n      // console.log(el)\n      parentElm.insertBefore(el, oldElm.nextSibling)\n      parentElm.removeChild(oldElm)\n  \n      return el\n    } else {\n      // 虚拟DOM的比对是在这里\n      // 首先是老节点是经过createElm(vnode)生成真实DOM的\n      // 而且真实节点是放到虚拟节点的vnode.el上的\n      // console.log(oldNode, vnode)\n      // 1.标签不一致直接替换即可\n      // 替换的原理是：先找到当前节点的父节点，然后再用新生成的节点替换掉当前节点\n      // createElm(vnode)创建了新的节点，并把真实节点放到vnode的el上，并且返回了vnode.el\n      if (oldNode.tag !== vnode.tag) {\n        oldNode.el.parentNode.replaceChild(createElm(vnode), oldNode.el)\n      }\n      // 2.如果文本呢？ 文本都没有tag \n      if (!oldNode.tag) {\n        if (oldNode.text !== vnode.text) {\n          oldNode.el.textContent = vnode.text\n        }\n      }\n\n      // 3. 说明标签一致而且不是文本了  (比对属性是否一致)\n      // 先把老的节点保存到新的vnode的el属性上，为了在后面比较，老的oldNode的data中属性，与vnode.el真实节点的属性做对比\n      // 如果老的有，新的没有，则删除老的节点上的属性，如果老的没有新的有，则添加到老的节点上\n      let el = vnode.el = oldNode.el\n      updateProperties(vnode, oldNode.data)\n\n      // 对于新老节点的标签名一样的，则去新老虚拟节点的孩子比对,根据比对的结果去更新el的内容\n\n      let oldChildren = oldNode.children || []\n      let newChildren = vnode.children || []\n\n      if (oldChildren.length > 0 && newChildren.length > 0) {\n        // 新老都有孩子，需要特殊比较，去更新el的内容，这也是diff算法的核心了\n        // 这种是先让新老虚拟节点进行比较，然后把比较的结果更新到el上\n        updateChildren(el, oldChildren, newChildren)\n\n      } else if (newChildren.length > 0) {\n        // 新的虚拟节点有孩子，老的没有，那么直接把新的虚拟节点的孩子转成\n        // 真实的DOM，并且添加到el上\n        for (let i = 0; i < newChildren.length; i++) {\n          let child = newChildren[i]\n          el.appendChild(createElm(child))\n        }\n      } else if (oldChildren.length > 0) {\n        // 新的没有，老的有，则直接把老的去掉\n        el.innerHTML = ''\n      }\n      // 最后就是新老都没有，则不做任何操作\n\n    }\n  }\n\n} \n\nfunction isSameVnode (newVnode, oldVnode) {\n  return (newVnode.tag === oldVnode.tag) && (newVnode.key === oldVnode.key)\n}\n\nfunction updateChildren (parent, oldChildren, newChildren) {\n  // vue采用的是双指针进行比较\n  // 思路：就是在新老虚拟节点的首尾设置一个指针，再去比较头指针所在的新老虚拟节点，不一样则替换，否则就是老的不变\n  // 然后移动新老虚拟节点的头指针，再做比较\n  // 直到新的或者老的头尾指针指向同一位置（即尾指针的地方），做比较\n  // while循环结束是头指针指向尾指针的下一位\n\n  let oldStartIndex = 0\n  let oldStartVnode = oldChildren[oldStartIndex]\n  let oldEndIndex = oldChildren.length - 1\n  let oldEndVnode = oldChildren[oldEndIndex]\n  let newStartIndex = 0\n  let newStartVnode = newChildren[newStartIndex]\n  let newEndIndex = newChildren.length - 1\n  let newEndVnode = newChildren[newEndIndex]\n\n  function makeIndexByKey (children) {\n    let map = {}\n    children.forEach((item, index) => {\n      // 不存在key直接比较标签\n      if (item.key) {\n        map[item.key] = index\n      }\n    })\n    return map\n  }\n  let map = makeIndexByKey(oldChildren) \n\n  // diff算法对DOM的优化点：\n  // 首先进行新老虚拟节点的头和头对比，\n  // 不满足，则进行尾和尾对比\n  // 不满足，则进行老虚拟节点的尾与新虚拟节点的头比较\n  // 不满足，则进行老虚拟节点的头与新虚拟节点的尾比较\n  // 不满足，则暴力对比\n\n\n  // 都是以老节点为比较的基准\n  while((oldStartIndex <= oldEndIndex) && (newStartIndex <= newEndIndex)) {\n\n    // 这里做判断是因为在暴力对比的过程中，会把有些老的节点赋值为undefined\n    if (oldStartVnode == undefined) {\n      oldStartVnode = oldChildren[++oldStartIndex]\n    } else if (oldEndVnode == undefined) {\n      oldEndVnode = oldChildren[--oldEndIndex]\n    } else {\n      // 1. 新老头虚拟节点相同，（尾虚拟节点不相同） 说明是从老节点的尾部插入的新节点\n      // 优化向后插入\n      if (isSameVnode(newStartVnode, oldStartVnode)) {\n        // 如果进来\n        // 说明新老的标签名是相同的，然后就是要去比较属性并更新\n        // 比较完成，则把头指针向后推移一位\n        patch(oldStartVnode, newStartVnode)\n\n        oldStartVnode = oldChildren[++oldStartIndex]\n        newStartVnode = newChildren[++newStartIndex]\n      } else if (isSameVnode(newEndVnode, oldEndVnode)) {\n        // 优化向前插入\n        // 2. 如果是从头部插入新的节点，则比较新老虚拟节点的尾指针指向的虚拟节点是否相同\n        // 相同的话，比较虚拟节点，然后尾指针向前移动\n        patch(oldEndVnode, newEndVnode)\n        oldEndVnode = oldChildren[--oldEndIndex]\n        newEndVnode = newChildren[--newEndIndex]\n      } else if (isSameVnode(oldStartVnode, newEndVnode)) {\n        // 开始交叉比较 这里必须把相同的那个节点移到新的虚拟节点对应老的节点的下一位的前面一位\n        // 重点是要移动那个相同的老节点！！！！！\n        // parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\n        // 这一步是必须的\n        // 然后在对比其他节点，如果符合上面的条件，则实现复用不需要移动节点\n        // 老的尾虚拟节点和新的头虚拟节点相同\n        // 头移尾\n        patch(oldStartVnode, newEndVnode)\n        parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling)\n        newEndVnode = newChildren[--newEndIndex]\n        oldStartVnode = oldChildren[++oldStartIndex]\n      } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n        // 尾移头\n        patch(oldEndVnode, newStartVnode)\n        parent.insertBefore(oldEndVnode.el, oldStartVnode.el)\n        oldEndVnode = oldChildren[--oldEndIndex]\n        newStartVnode = newChildren[++newStartIndex]\n      } else {\n        // 暴力对比 乱序对比\n        // 查找规则：先取出新的第一个虚拟节点，通过key在老的虚拟节点中查找是否存在\n\n        // 在查找的过程中，以老的虚拟节点的开始索引为标准\n        // 如果新的虚拟节点在老的中没有找到，则插入头指针（开始索引）所在的节点的前面一位\n        // 如果新的虚拟节点在老的中找到，则直接复用老的节点，然后插入到头指针（开始索引）的前面一位，然后把老的节点赋值为null这样防止数组塌陷\n        // 依次进行\n        // 最后，看看头指针和尾指针之间是否还有老的节点存在，如果存在，则直接销毁\n\n        // 先根据老节点的key做一个映射表，拿新的虚拟节点去映射表中查找，如果可以查找到，则进行移动操作（移到头指针\n        // 的前面位置）如果找不到则直接将元素插入到头指针前面即可（即使头指针位置改变了，也是以头指针为准）\n        let moveIndex = map[newStartVnode.key]\n        if (!moveIndex) { // 映射表中不存在，就是不需要复用，则插入到头指针的前面\n          parent.insertBefore(createElm(newStartVnode), oldStartVnode.el)\n        } else { // 这种情况是可以复用，但是不在上面四种比较的情况下（如果在的话，就会直接对比移动）\n          // 找到了，就把老的节点移到头指针前面，并且把当前位置变为null\n          let moveVnode = oldChildren[moveIndex]\n          oldChildren[moveIndex] = undefined\n          parent.insertBefore(moveVnode.el, oldStartVnode.el)\n          // 再把这个节点和新的节点做对比\n          patch(moveVnode, newStartVnode)\n        }\n        // 把头指针向后移动一位\n        newStartVnode = newChildren[++newStartIndex]\n        // 然后比较完后，如果老的头指针和尾指针之间还有节点，则删除掉\n      }\n    }\n  }\n  // console.log(newStartIndex, newEndIndex)\n  // console.log(newStartIndex, newEndIndex)\n  // 1. 比较完成，如果新的虚拟节点还有剩余，则直接添加到父元素上\n  // 这里的小于等于要注意，因为在while循环中，开始的索引和尾索引重合了\n  if (newStartIndex <= newEndIndex) {\n    for(let i = newStartIndex; i <= newEndIndex; i++) {\n      /**\n       * 这里是因为appendChild()只能在元素的后面插入，如果是从头节点插入就不符合\n       * insertBefore(target, base), 如果第二个参数传入的是null则就会从最后插入元素\n       * 否则则会插入某个元素的前面\n       * 这个需要判断一下，如果是从后面插入，则需要找到老的节点的最后一位的下一位是什么，\n       * （因为oldEndIndex已经指向最后一个节点，所以oldEndIndex + 1 就是老的节点的最后一个的下一位即为null\n       * 如果是从头插入节点，则需要获取到老节点的第一个节点（oldChildren[oldStartIndex]）是虚拟节点，要获取该虚拟节点上el属性此为真实节点（oldChildren[oldStartIndex].el），然后插入新创建的节点\n       */\n      let el = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el\n      // console.log(el)\n      parent.insertBefore(createElm(newChildren[i]), el)\n    }\n  }\n\n  //然后比较完后，如果老的头指针和尾指针之间还有节点，则删除掉\n\n  if (oldStartIndex <= oldEndIndex) {\n    for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n      if (oldChildren[i]!= undefined) {\n        parent.removeChild(oldChildren[i].el)\n      }\n    }\n  }\n}\nfunction createComponent(vnode) {\n  let i = vnode.data\n  // HTML标签是没有hook这个属性的\n  if ((i = i.hook) && (i = i.init)) {\n    i(vnode)\n  }\n\n  // console.log(vnode)\n\n  // 当init执行完毕之后\n  if (vnode.componentInstance) {\n    // 说明组件已经创建了该实例\n    return true\n  }\n}\n\n\nexport function createElm (vnode) { // 根据虚拟节点创建真实节点\n  // 是标签还是文本\n  let {tag, children, data, key, text} = vnode\n  if (typeof tag === 'string') {\n\n    // tag可能是HTML标签，也可能是组件名\n\n    // 实例化组件\n    // console.log(createComponent(vnode))\n    if (createComponent(vnode)) {\n      // 组件名\n      // 这里返回的是真实DOM\n      return vnode.componentInstance.$el\n    }\n    // 标签\n    vnode.el = document.createElement(tag)\n\n    updateProperties(vnode)\n\n    vnode.children.forEach(child => {\n      return vnode.el.appendChild(createElm(child))\n    })\n\n  } else {\n    // 虚拟DOM上映射真实DOM，方便后续操作\n    vnode.el = document.createTextNode(text)\n  }\n\n  return vnode.el\n}\n\nfunction updateProperties (vnode, oldProps = {}) {\n  const newProps = vnode.data || {}\n\n  // console.log(newProps, oldProps)\n  // 把属性放到当前节点 vnode.el\n  const el = vnode.el\n\n  for (let i in oldProps) {\n    if (!newProps[i]) {\n      el.removeAttribute(i)\n    }\n  }\n  let newStyle = newProps.style || {}\n  let oldStyle = oldProps.style || {}\n  for (let i in oldStyle) {\n    if (!newStyle[i]) {\n      el.style[i] = ''\n    }\n  }\n  // console.log(newProps)\n  for (let key in newProps) {\n    // 属性为style或者是class的需要特殊处理\n    if (key === 'style') {\n      for (let styleName in newProps.style) {\n        el.style[styleName] = newProps.style[styleName]\n      }\n    } else if (key === 'class') {\n      el.className = newProps.class\n    } else {\n      el.setAttribute(key, newProps[key])\n    }\n  }\n\n}","import Watcher from './observer/watcher'\nimport { patch } from './vdom//patch'\nexport function lifecycleMixin(Vue) {\n  Vue.prototype._update = function (vnode) {\n    // 返回的是真实的DOM\n\n    const vm = this\n\n    // 首先第一次渲染的时候是不会进行diff算法比对的\n    // 所以应该先记下上一次的虚拟节点\n    // 把上次的虚拟节点放在vm实例上作为标记\n    let prevVnode = vm._vnode\n    vm._vnode = vnode // 此时的vnode上真实的DOM（el属性上）\n\n    /**\n     * _vnode 与 $vnode区别：\n     * _vnode 对应的就是这个组件本身渲染的内容（是组件里的内容，不是组件的）\n     * $vnode代表的是组件的虚拟节点（{tag: 'my-compontne-',....},不是组件内的，\n     * 就是内部根据这个组件标签创建的虚拟节点\n     * \n     * 关系： this._vnode.parent === this.$vnode\n     */\n \n    if (!prevVnode) {\n      // 通过虚拟节点，渲染出真实的DOM， 然后替换掉真实的$el\n      vm.$el = patch(vm.$el, vnode) // 这里是新旧做比对    \n    } else {\n      vm.$el = patch(prevVnode, vnode)\n    }\n\n    // // 通过虚拟节点，渲染出真实的DOM， 然后替换掉真实的$el\n    // vm.$el = patch(vm.$el, vnode) // 这里是新旧做比对\n\n\n  }\n} \n\n\nexport function mountComponent(vm, el) {\n  const options = vm.$options // 有render函数\n  vm.$el = el // 真实的DOM元素,是页面上获取的DOM（旧的）\n\n  // 渲染页面\n\n  // 在渲染页面之前，调用一下\n  callHook(vm, 'beforeMount') // 这个时候可以拿到这是的DOM但是数据并没有渲染上去\n  \n  // Watcher是用来渲染的\n  // vm._render 通过解析的render方法 返回的是虚拟dom，\n  // vm_update返回的是真实的dom\n  let updataComponent = () => { // 无论是更新还是渲染都会用到此方法\n\n    // vm._render 返回的是虚拟dom，vm_update返回的是真实的dom（现在是新的，并且数据都已经填充完成）\n\n\n    // console.log('update') // queueWatcher验证\n    vm._update(vm._render())\n\n    // 只有第一次才会解析成AST语法树，后面的更新，只会去做比对然后更新\n  }\n\n  // 然后在一个Watcher类，调用updataComponent函数\n\n  // 渲染watcher，每个组件都有一个watcher\n  new Watcher(vm, updataComponent, () => {}, true) // true表示它是一个渲染watcher\n\n  // 在渲染页面之后，调用一下\n  callHook(vm, 'mounted')// 这个时候数据完成了渲染\n}\n\nexport function callHook (vm, hook) {\n  // 现在hook是用户在vue文件中自定义传入的钩子函数\n  const hanlders = vm.$options[hook]\n  if (hanlders) {\n    for (let i = 0; i < hanlders.length; i++) {\n      hanlders[i].call(vm)\n    }\n  }\n}","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\n// 把获取的HTML解析成ast语法树\n\nexport function parseHTML (html) {\n  let root = null // ast语法树根节点\n  let currentParent = null // 标记当前元素的父元素\n  let stack = [] // 栈用来保存创建好的ast节点，为了在匹配结束标签的时候，看看是否匹配的上（即元素是否正确闭合）利用栈的特性（遇到结束标签，抛出栈顶元素）\n  const ELEMENT_TYPE = 1\n  const TEXT_TYPE = 3\n\n  // 根据元素创建ast树的节点 \n  function createASTElement(tagName, attrs) {\n    return {\n      tag: tagName,\n      type: ELEMENT_TYPE,\n      attrs,\n      children: [],\n      parent: null\n    }\n  }\n\n\n  function start (tagName, attrs) {\n    // console.log('开始标签：', tagName, attrs)\n    let element = createASTElement(tagName, attrs)\n\n    // console.log(currentParent)\n    // 先查看根节点是否存在，\n    if (!root) {\n      root = element\n    }  \n    // 开始标签可以看成是父级标签\n    // 把当前元素标记成父ast树\n    currentParent = element\n    stack.push(element)\n  }\n  function chars(text) {\n    // console.log('文本是：',text)\n    // 文本标签肯定是子元素\n    text = text.replace(/\\s/g, '')\n    if (text) {\n      currentParent.children.push({\n        text,\n        type: TEXT_TYPE\n      })\n    }\n  }\n  //  <div><p></p></div>  ['div', 'p']\n  function end(tagName) {\n    // console.log('结束标签：', tagName)\n    // 这里开始匹配标签闭合是否正确, 抛出栈顶元素\n    let element = stack.pop()\n    if (element) {\n      if (element.tag === tagName) {\n        // 获取栈内最后一个元素，此元素是抛出元素的父元素\n        currentParent = stack[stack.length - 1]\n        // console.log(currentParent)\n        if (currentParent) {\n          element.parent = currentParent\n          currentParent.children.push(element)\n        }\n      }\n    }\n  }\n  // 不停的解析html字符串\n  while(html) {\n    let textEnd = html.indexOf('<')\n    // 如果是0的话，说明匹配的可能是开始标签或者是结束标签，但都是代表着标签的开始\n    if (textEnd === 0) {\n      let startTagMatch = parseStartTag() // 这个方法是用来匹配标签名和属性的\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        // console.log(startTagMatch)\n        continue // 如果匹配的是开始标签就继续在匹配\n      }\n\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n    }\n\n    // 如果textEnd>=0的话，说明是一段文本\n    let text = ''\n    if(textEnd >= 0) {\n      text = html.substring(0, textEnd) \n    }\n    if (text) {\n      chars(text)\n      advance(text.length)\n      // console.log(html, textEnd)\n      // break\n    }\n  }\n\n  function advance(n) {\n    html = html.substring(n)\n  }\n\n\n  function parseStartTag() {\n    let start = html.match(startTagOpen)\n    if (start) {\n      // 开始组装数据\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      // 匹配标签名完成，删除\n      advance(start[0].length)\n      // 然后再去匹配属性\n      // 匹配属性，需要注意标签内是否有属性\n      let end = null\n      let attr = null\n      while(!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        match.attrs.push({\n          name: attr[1], \n          value: attr[3] || attr[4] || attr[5]\n        })\n        advance(attr[0].length)\n      }\n      // end匹配的开始标签的'>', 如果匹配到，则表示这个标签匹配完成\n      if (end) {\n        advance(end[0].length)\n        return match\n      }\n    }\n    // console.log(start)\n    // console.log(html)\n  }\n  return root\n}","const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nfunction genProps (attrs) {\n  let str = ''\n  for (let i = 0; i < attrs.length; i++) {\n    let attr = attrs[i]\n    if (attr.name === 'style') { // style特殊处理\n      let obj = {}\n      let styleValue = attr.value.split(';')\n      styleValue.forEach(item => {\n        let [key, value] = item.trim().split(':')\n        obj[key] = value && value.trim()\n      })\n      attr.value = obj\n    }\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\n  }\n  return `{${str.slice(0, -1)}}`\n}\n\nfunction  genChildren(el) {\n  let children =  el.children\n  if (children && children.length) {\n    return `${children.map(c => gen(c)).join(',')}`\n  }else {\n    return false\n  }\n}\n\nfunction gen(node) {\n  if (node.type === 1) {\n    return generate(node)\n  } else {\n    // 现在是文本和变量\n    let text = node.text // <div>a {{  name  }} b{{age}} c</div>里面的text，a {{  name  }} b{{age}} c\n    let tokens = []\n    let match = null\n    let index = null\n    // 只要是全局匹配 就需要将lastIndex每次匹配的时候调到0处 正则匹配的懒惰性\n    let lastIndex = defaultTagRE.lastIndex = 0\n    while(match = defaultTagRE.exec(text)) {\n      index = match.index\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n      }\n      tokens.push(`_s(${match[1].trim()})`)\n      lastIndex = index + match[0].length\n    }\n    // console.log(defaultTagRE.exec(text))\n     // 这里匹配的是最后的文本 “ c”\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\n    }\n    return `_v(${tokens.join('+')})`\n  }\n}\n\nexport function generate (el) {\n  let children = genChildren(el)\n  let code = `_c(\"${el.tag}\", ${\n   el.attrs.length ? genProps(el.attrs) : 'undefined'\n   // 逗号写在里面是为了，没有孩子的时候，不需要逗号\n  }${children ? `,${ children }` : ''})`\n\n  return code\n}","\n// ast语法树是用对象来描述原生语法的，虚拟DOM是用对象来描述DOM节点的\n\nimport { parseHTML } from './parser-html'\nimport { generate } from './generate'\n\nexport function compileToFunction(template) {\n\n  // 解析HTML字符串，就是用正则去匹配HTML的内容，匹配到了，则就删除在HTML中的对应内容，然后在进行下一次匹配，依次循环\n  // 然后再去解析成ast语法树\n  let root = parseHTML(template)\n  // console.log(root)\n\n  // 需要把ast语法树生成render函数 就是字符串的拼接，模版引擎\n\n\n  // 核心思路就是将模版转化成下面这段字符串\n  // <div id=\"app\"><p>hello {{name}}</p> hello</div>\n  // 将ast树再次转化成js语法\n  // _c: 第一个参数是标签名，第二参数是属性，第三个参数是子元素\n  // _c(\"div\", {id: app}, _c(\"p\", undefined, _v(\"hello\" + _s(name))), _v(\"hello\"))\n  \n  let code = generate(root)\n  // _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello')) \n  // 所有的模板引擎实现 都需要new Function + with\n  // 步骤： 拼接字符串， 添加with， new Function生成函数\n  let renderFn = new Function(`with(this){ return ${code} }`)\n  // console.log(renderFn)\n  return renderFn\n}","// 在Vue原型上添加一个init方法\n// 暴露出去是为了index.js文件可以引入这样子就很清晰每一块的作用\nimport {initState} from './state'\n\nimport { mountComponent, callHook } from './lifecycle'\nimport { mergeOptions } from './utils/index'\n\nimport { compileToFunction } from './compiler/index'\n\nimport { nextTick } from './utils/next-tick'\nexport function initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    // 数据劫持\n\n    const vm =  this\n    // 将用户传递的，和全局的进行合并\n    // vm.constructor.options保证了谁调用就用谁的options，不一定是Vue上的 \n    vm.$options =  mergeOptions(vm.constructor.options, options)\n    // 此时已经合并完生命周期了，然后就需要在某个时期，调用一下存好的钩子函数就可以了\n    // 就是callHoook,\n    // console.log(vm.$options)\n    callHook(vm, 'beforeCreate')\n\n    initState(vm)\n\n    callHook(vm, 'created')\n\n    // 开始挂载渲染页面\n    // 如果用户传入了el属性，需要将页面渲染出来\n    // 如果用户传入了el属性，就要实现挂载流程\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n  }\n\n  // 实现挂载流程\n  Vue.prototype.$mount = function(el) {\n    const vm = this\n    const options = vm.$options\n    // 获取el元素\n    el = document.querySelector(el)\n\n    // 默认先查找有没有render方法，没有，则会采用template， template也没有的话\n    // 就用el的内容代替template\n    // render-> template -> el\n\n    if(!options.render) {\n      // 如果用户自己写的render函数则使用，没有则需要把模版进行编译然后在赋值给options上的render\n      // 对模版进行编译\n      let template = options.template\n      // 如果没有template的话就把el当作template\n      if(!template && el) {\n        template = el.outerHTML\n      }\n      // 然后就需要把template转换成render方法\n      const render = compileToFunction(template)\n      options.render = render\n    }\n\n    // 开始渲染当前组件，并挂载这个组件\n    mountComponent(vm, el)\n\n  }\n\n  Vue.prototype.$nextTick = nextTick\n\n}","import { isObject, isReservedTag } from \"../utils/index\"\n\nexport function createElement (vm, tag, data = {}, ...children) {\n  // console.log(vm, tag, data, children)\n  let key = data.key\n  if (key) {\n    delete data.key\n  }\n\n  // 因为有自定义的组件，所以需要特殊处理一下组件\n  if (isReservedTag(tag)) {\n    return vnode(tag, data, key, children, undefined)\n  } else {\n    // 组件\n    // 如何获取组件的内容的，可以通过$options.components和tag判断全局下是否有该组件\n    // 然后就可以找到子组件的构造函数\n    let Ctor = vm.$options.components[tag]\n    return createComponent(vm, tag, data, key, children, Ctor)\n  }\n}\n\nfunction createComponent(vm, tag, data, key, children, Ctor) {\n  // 这里做判断是因为如果是子组件内注册的组件，此时是对象，所以需要转成构造函数\n  if (isObject(Ctor)) {\n    Ctor = vm.$options._base.extend(Ctor)\n  }\n  // 在创建组件的时候，给data添加组件初始化的钩子函数\n  // 为了可以初始化组件\n  data.hook = {\n    init (vnode) {\n      // 当前实例就是 componentInstance\n      let child = vnode.componentInstance = new Ctor({ _isComponent: true })\n      child.$mount() // 这里是对组件进行挂载，但是没有根元素\n    },\n    inserted () {\n\n    }\n  }\n  return vnode(`vue-component-${Ctor.cid}-${tag}`, data, key, undefined, {Ctor, children})\n}\n\nexport function createTextNode (vm, text) {\n  // console.log(text)\n  return vnode(undefined, undefined, undefined, undefined, text)\n}\n\nfunction vnode(tag, data, key, children, text, componentOptions) {\n  return {\n    tag,\n    data,\n    key,\n    children,\n    text,\n    componentOptions\n  }\n}\n\n// 虚拟节点 就是通过_c _v实现用对象描述DOM的操作（本质上还是对象）\n\n// 1）将template转换成ast语法树 -> 生成render方法 -> 生成虚拟DOOM -> 真实的DOM\n//    更新： 重新生成虚拟DOM -> 更新DOM","import { createElement, createTextNode } from './vdom/create-element'\n\nexport function renderMixin(Vue) {\n  // 还是为了Vue原型上添加方法，方便在其他地方使用\n\n  // _c 创建元素虚拟节点 参数：tag, props, children\n  // _v 创建文本的虚拟节点\n  // _s JSON.stringify()\n\n  Vue.prototype._c = function () {\n    return createElement(this, ...arguments) // _c内有由ast树组合的参数,如果不明白参数请看compiler/index下的render\n  }\n\n  Vue.prototype._v = function (text) {\n    return createTextNode(this, text)\n  }\n\n  Vue.prototype._s = function (val) {\n    // 这里的参数传入的是变量，所以根据变量的类型，转成字符串\n    return val == null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val)\n  }\n\n  Vue.prototype._render = function () {\n    // 首先获取实例\n    const vm = this\n    const { render } = vm.$options\n\n    \n    // console.log(render)\n    //这里是执行之前生成的render函数，还需要传入当前的实例，with(this)， 获取到实例上对应的值\n    // 太重要了！！！\n    let vnode = render.call(vm) // 这里执行了，with特性，所以变量都可以获取到data中的值\n    // console.log(vnode)\n    return vnode\n  }\n}","export default function initMixin (Vue) {\n  \n  Vue.mixin = function (mixin) {\n\n    // 合并现有的全局上的options， 和传入的mixin对象\n    // 如何实现两个对象的合并\n    this.options = mergeOptions(this.options, mixin)\n\n  }\n\n  // 生命周期合并策略\n\n  // Vue.mixin({\n  //   a: 1, \n  //   beforeCreate() {\n  //     console.log('mixin 1')\n  //   }\n  // })\n\n  // Vue.mixin({\n  //   b: 2, \n  //   a: 4,\n  //   beforeCreate() {\n  //     console.log('mixin 2')\n  //   }\n  // })\n\n  // console.log(Vue.options)\n}","import { mergeOptions } from '../utils/index'\nexport default function initExtend (Vue) {\n  let cid = 0\n  Vue.extend = function (extendOptions) {\n    // 父组件在初始化的时候会调用_init(options)，同样，子类也要调用_init初始化自己的内容\n    // 但是子类以后自己扩展的内容必须为自己所有，又要获取父类上的内容，所以继承可以实现\n\n    const Sub = function VueComponent (options) {\n      // 子类初始化自己的内容，\n      this._init(options)\n    }\n    Sub.cid = cid++\n    Sub.prototype = Object.create(this.prototype)\n    Sub.prototype.constructor = Sub\n    // 同样也需要把父类的options 和子类传入的extendOptions，添加在子类（子组件）上options\n    Sub.options = mergeOptions(this.options, extendOptions)\n\n    // 这里返回Sub子类，参考Vue.extend()用法\n    return Sub\n  } \n}","export const ASSETS_TYPE = [\n  'component',\n  'filter',\n  'directive'\n]","import { ASSETS_TYPE } from './const'\n\nexport default function initAssetRegister (Vue) {\n  // 这里是因为Vue.component Vue.filter Vue.directive的参数类型一样的\n  // id就是名称\n  ASSETS_TYPE.forEach(type => {\n    Vue[type] = function(id, definition) {\n      if (type === 'component') {\n        // 注册全局组件的函数\n        // 需要使用Vue.extend函数，把对象变成构造函数\n        // 这里一定要保证调用extend的是父类，而不是子类（子组件）因为子组件中也会childComponent.component()\n        // 所以 this.options._base.extend 也可以Vue.extend 有可能其他地方没有传入Vue则可以使用this.options._base代替父类\n        definition = this.options._base.extend(definition)\n      } else if (type === 'filter') {\n        // 注册全局过滤器的函数\n      } else if (type === 'directive') {\n        // 注册全局指令的函数\n      }\n\n      // 前面的逻辑执行完，还需要把这些加入到Vue.options上去\n      this.options[type + 's'][id] = definition\n    }\n  })\n}","import { mergeOptions } from '../utils/index'\nimport initMixin from './mixin'\nimport initExtend from './extend'\nimport initAssetRegister from './assets'\nimport { ASSETS_TYPE } from './const'\n\nexport function initGlobalAPI (Vue) {\n  // 整合了所有的全局相关的内容\n  Vue.options = {}\n\n  initMixin(Vue)\n\n  // 初始化的components filters directives都会放在Vue.options上，\n  // Vue.options.components = {}\n  // Vue.options.filters = {}\n  // Vue.options.directives = {}\n  // 所以可以使用一个数组分别添加到options上，但是又由于Vue.component()...这样子注册\n  // 所以数组内存放的是单数 （可以实现复用这三个对象的内容）\n\n  // 放到options上是为了更好的区分，哪些方法子类的，哪些是父类的\n  ASSETS_TYPE.forEach(type => {\n    Vue.options[`${type}s`] = {}\n  })\n\n  Vue.options._base = Vue // _base就是Vue的构造函数，以供在其他没有传入Vue地方获取到构造函数\n  \n  initExtend(Vue)\n  // 初始化全局函数 Vue.component Vue.filter Vue.directive\n  initAssetRegister(Vue)\n\n}","import { initMixin } from './init'\nimport { renderMixin } from './render'\nimport { lifecycleMixin } from './lifecycle'\n\nimport { initGlobalAPI }  from './initGlobalAPI/index'\n\n// index.js vue入口文件\nfunction Vue (options) {\n  this._init(options)\n}\n\n// 通过引入文件方式给Vue原型上添加方法\n// 也就是可以通过Vue实例就可以访问的\ninitMixin(Vue)\nrenderMixin(Vue)\nlifecycleMixin(Vue)\n\n\n\n// 下面是给Vue添加方法\n// Vue添加全局变量和函数，也就是静态方法\n\n// 初始化全局API\ninitGlobalAPI(Vue)\n\nexport default Vue\n\n\n// import {compileToFunction} from './compiler/index'\n// import {createElm, patch} from './vdom/patch'\n\n// let vm1 = new Vue({\n//   data: {\n//     name: 'old node'\n//   }\n// })\n\n// let render1= compileToFunction(`<div id=\"app1\" a=\"2\" style=\"background: red;\">\n\n//   <div style=\"background: red;\" key=\"A\">A</div>\n//   <div style=\"background: blue;\" key=\"B\">B</div>\n//   <div style=\"background: yellow;\" key=\"C\">C</div>\n// </div>`)\n// let vnode1 = render1.call(vm1)\n// let el1 = createElm(vnode1)\n\n// document.body.appendChild(el1)\n// // console.log(vnode1)\n\n// let vm2 = new Vue({\n//   data: {\n//     name: 'new node'\n//   }\n// })\n\n// let render2= compileToFunction(`<div id=\"app2\" b=\"3\" style=\"color: blue;\">\n\n// <div style=\"background: red;\" key=\"Q\">Q</div>\n//   <div style=\"background: red;\" key=\"A\">A</div>\n//   <div style=\"background: blue;\" key=\"F\">F</div>\n//   <div style=\"background: yellow;\" key=\"C\">C</div>\n// <div style=\"background: green;\" key=\"N\">N</div>\n// </div>`)\n// let vnode2 = render2.call(vm2)\n\n// setTimeout(() => { patch(vnode1, vnode2) }, 3000)\n\n// patch(vnode1, vnode2) // 传入两个虚拟节点，会在内部进行比较\n\n// diff算法特点：\n// 1. 平级比较，我们操作节点时，很少会涉及到父变成子，子变成父的（O(n*n*n)）"],"names":["isObject","data","isReservedTag","tagName","str","obj","split","forEach","tag","def","key","value","Object","defineProperty","configurable","enumerable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","hook","mergeAssets","res","create","components","mergeOptions","parent","child","option","mergeField","hasOwnProperty","oldArrayMethods","Array","prototype","arrayMethods","methods","method","args","console","log","result","apply","inserted","ob","__ob__","slice","observerArray","dep","notify","id","Dep","constructor","subs","addSub","watcher","push","target","depend","addDep","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","__proto__","walk","i","observe","keys","defineReactive","childob","dependArray","newVal","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","callbacks","waiting","flushCallback","callback","nextTick","cb","setTimeout","queue","has","flushSchedularQueue","run","queueWatcher","Watcher","exprOrFn","options","getter","depsId","Set","deps","add","patch","oldNode","vnode","createElm","isRealElement","nodeType","oldElm","parentElm","parentNode","el","insertBefore","nextSibling","removeChild","replaceChild","text","textContent","updateProperties","oldChildren","children","newChildren","updateChildren","appendChild","innerHTML","isSameVnode","newVnode","oldVnode","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","makeIndexByKey","map","item","index","undefined","moveIndex","moveVnode","createComponent","init","componentInstance","$el","document","createElement","createTextNode","oldProps","newProps","removeAttribute","newStyle","style","oldStyle","styleName","className","class","setAttribute","lifecycleMixin","Vue","_update","prevVnode","_vnode","mountComponent","callHook","updataComponent","_render","hanlders","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","attrs","type","start","element","chars","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","styleValue","trim","JSON","stringify","genChildren","c","gen","join","node","generate","tokens","lastIndex","exec","code","compileToFunction","template","renderFn","Function","initMixin","_init","$mount","querySelector","render","outerHTML","$nextTick","Ctor","_base","extend","_isComponent","cid","componentOptions","renderMixin","_c","arguments","_v","_s","val","mixin","initExtend","extendOptions","Sub","VueComponent","ASSETS_TYPE","initAssetRegister","definition","initGlobalAPI"],"mappings":";;;;;;EAAO,SAASA,QAAT,CAAkBC,IAAlB,EAAwB;EAC7B,SAAO,OAAOA,IAAP,KAAiB,QAAjB,IAA6B,OAAOA,IAAP,KAAgB,IAApD;EACD;EAEM,SAASC,aAAT,CAAwBC,OAAxB,EAAiC;EACtC,MAAIC,GAAG,GAAG,yBAAV;EACA,MAAIC,GAAG,GAAG,EAAV;EACAD,EAAAA,GAAG,CAACE,KAAJ,CAAU,GAAV,EAAeC,OAAf,CAAuBC,GAAG,IAAI;EAC5BH,IAAAA,GAAG,CAACG,GAAD,CAAH,GAAW,IAAX;EACD,GAFD;EAIA,SAAOH,GAAG,CAACF,OAAD,CAAV;EACD;EAEM,SAASM,GAAT,CAAaR,IAAb,EAAmBS,GAAnB,EAAwBC,KAAxB,EAA+B;EACpCC,EAAAA,MAAM,CAACC,cAAP,CAAsBZ,IAAtB,EAA4BS,GAA5B,EAAiC;EAC/BI,IAAAA,YAAY,EAAE,KADiB;EAE/BC,IAAAA,UAAU,EAAE,KAFmB;EAG/BJ,IAAAA;EAH+B,GAAjC;EAKD;;EAGM,SAASK,KAAT,CAAeC,EAAf,EAAmBC,MAAnB,EAA4BR,GAA5B,EAAiC;EACtCE,EAAAA,MAAM,CAACC,cAAP,CAAsBI,EAAtB,EAA0BP,GAA1B,EAA+B;EAC7BS,IAAAA,GAAG,GAAI;EACL,aAAOF,EAAE,CAACC,MAAD,CAAF,CAAWR,GAAX,CAAP;EACD,KAH4B;;EAI7BU,IAAAA,GAAG,CAAEC,QAAF,EAAY;EACbJ,MAAAA,EAAE,CAACC,MAAD,CAAF,CAAWR,GAAX,IAAkBW,QAAlB;EACD;;EAN4B,GAA/B;EAQD;EAED,MAAMC,eAAe,GAAG,CACtB,cADsB,EAEtB,SAFsB,EAGtB,aAHsB,EAItB,SAJsB,EAKtB,cALsB,EAMtB,SANsB,EAOtB,eAPsB,EAQtB,WARsB,CAAxB;;EAYA,MAAMC,MAAM,GAAG,EAAf;;EAEA,SAASC,SAAT,CAAoBC,SAApB,EAA+BC,QAA/B,EAAyC;EACvC,MAAIA,QAAJ,EAAc;EACZ,QAAID,SAAJ,EAAe;EACb,aAAOA,SAAS,CAACE,MAAV,CAAiBD,QAAjB,CAAP;EACD,KAFD,MAEO;EACL,aAAO,CAACA,QAAD,CAAP;EACD;EACF,GAND,MAMO;EACL,WAAOD,SAAP;EACD;EACF;;EAEDH,eAAe,CAACf,OAAhB,CAAwBqB,IAAI,IAAI;EAC9BL,EAAAA,MAAM,CAACK,IAAD,CAAN,GAAeJ,SAAf;EACD,CAFD;;EAIA,SAASK,WAAT,CAAsBJ,SAAtB,EAAiCC,QAAjC,EAA2C;EACzC;EACA,QAAMI,GAAG,GAAIlB,MAAM,CAACmB,MAAP,CAAcN,SAAd,CAAb;;EACA,MAAIC,QAAJ,EAAc;EACZ,SAAK,IAAIhB,GAAT,IAAgBgB,QAAhB,EAA0B;EACxBI,MAAAA,GAAG,CAACpB,GAAD,CAAH,GAAWgB,QAAQ,CAAChB,GAAD,CAAnB;EACD;EACF;;EACD,SAAOoB,GAAP;EACD;;;EAEDP,MAAM,CAACS,UAAP,GAAoBH,WAApB;EAEO,SAASI,cAAT,CAAuBC,MAAvB,EAA+BC,KAA/B,EAAsC;EAC3C,QAAMC,MAAM,GAAG,EAAf,CAD2C;;EAG3C,OAAK,IAAI1B,GAAT,IAAgBwB,MAAhB,EAAwB;EACtBG,IAAAA,UAAU,CAAC3B,GAAD,CAAV;EACD,GAL0C;;;EAQ3C,OAAK,IAAIA,GAAT,IAAgByB,KAAhB,EAAuB;EACrB,QAAI,CAACD,MAAM,CAACI,cAAP,CAAsB5B,GAAtB,CAAL,EAAiC;EAC/B2B,MAAAA,UAAU,CAAC3B,GAAD,CAAV;EACD;EACF,GAZ0C;;;EAe3C,WAAS2B,UAAT,CAAqB3B,GAArB,EAA0B;EACxB,QAAIa,MAAM,CAACb,GAAD,CAAV,EAAiB;EACf,aAAO0B,MAAM,CAAC1B,GAAD,CAAN,GAAca,MAAM,CAACb,GAAD,CAAN,CAAYwB,MAAM,CAACxB,GAAD,CAAlB,EAAyByB,KAAK,CAACzB,GAAD,CAA9B,CAArB;EACD;;EACD,QAAI,OAAOwB,MAAM,CAACxB,GAAD,CAAb,KAAuB,QAAvB,IAAmC,OAAOyB,KAAK,CAACzB,GAAD,CAAZ,KAAsB,QAA7D,EAAuE;EACrE0B,MAAAA,MAAM,CAAC1B,GAAD,CAAN,GAAc,EACZ,GAAGwB,MAAM,CAACxB,GAAD,CADG;EAEZ,WAAGyB,KAAK,CAACzB,GAAD;EAFI,OAAd;EAID,KALD,MAKO,IAAIyB,KAAK,CAACzB,GAAD,CAAL,IAAc,IAAlB,EAAwB;EAC7B0B,MAAAA,MAAM,CAAC1B,GAAD,CAAN,GAAcwB,MAAM,CAACxB,GAAD,CAApB;EACD,KAFM,MAEA;EACL0B,MAAAA,MAAM,CAAC1B,GAAD,CAAN,GAAcyB,KAAK,CAACzB,GAAD,CAAnB;EACD;EACF;;EAED,SAAO0B,MAAP;EACD;;EC3GD;EAEA;EAEA,MAAMG,eAAe,GAAGC,KAAK,CAACC,SAA9B;EAGA;;EACO,MAAMC,YAAY,GAAG9B,MAAM,CAACmB,MAAP,CAAcQ,eAAd,CAArB;EAEP,MAAMI,OAAO,GAAG,CACd,MADc,EAEd,OAFc,EAGd,KAHc,EAId,SAJc,EAKd,SALc,EAMd,MANc,EAOd,QAPc,CAAhB;EAUAA,OAAO,CAACpC,OAAR,CAAgBqC,MAAM,IAAI;EACxBF,EAAAA,YAAY,CAACE,MAAD,CAAZ,GAAuB,UAAU,GAAGC,IAAb,EAAmB;EACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAAoB,IAApB,EADwC;;EAGxC,UAAMI,MAAM,GAAGT,eAAe,CAACK,MAAD,CAAf,CAAwBK,KAAxB,CAA8B,IAA9B,EAAoCJ,IAApC,CAAf,CAHwC;EAIxC;EACA;;EACA,QAAIK,QAAJ,CANwC;;EAOxC,QAAIC,EAAE,GAAG,KAAKC,MAAd;;EACA,YAAOR,MAAP;EACE,WAAK,MAAL;EACA,WAAK,SAAL;EACEM,QAAAA,QAAQ,GAAGL,IAAX,CADF;;EAEE;;EACF,WAAK,QAAL;EACEK,QAAAA,QAAQ,GAAGL,IAAI,CAACQ,KAAL,CAAW,CAAX,CAAX;EANJ;;EAWA,QAAIH,QAAJ,EAAc;EACZC,MAAAA,EAAE,CAACG,aAAH,CAAiBJ,QAAjB,EADY;EAEb;;EAEDC,IAAAA,EAAE,CAACI,GAAH,CAAOC,MAAP,GAvBwC;;EAyBxC,WAAOR,MAAP;EACD,GA1BD;EA2BD,CA5BD;;ECtBA,IAAIS,EAAE,GAAG,CAAT;;EACA,MAAMC,GAAN,CAAU;EACRC,EAAAA,WAAW,GAAG;EACZ,SAAKF,EAAL,GAAUA,EAAE,EAAZ;EACA,SAAKG,IAAL,GAAY,EAAZ;EACD;;EACDC,EAAAA,MAAM,CAAEC,OAAF,EAAW;EACf,SAAKF,IAAL,CAAUG,IAAV,CAAeL,GAAG,CAACM,MAAnB;EACD;;EACDC,EAAAA,MAAM,GAAG;EACP;EACA;EAEA;EACA;EACA;EACAP,IAAAA,GAAG,CAACM,MAAJ,CAAWE,MAAX,CAAkB,IAAlB;EACD;;EAEDV,EAAAA,MAAM,GAAG;EACP,SAAKI,IAAL,CAAUrD,OAAV,CAAkBuD,OAAO,IAAIA,OAAO,CAACK,MAAR,EAA7B;EACD;;EApBO;;EAuBV,IAAIC,KAAK,GAAG,EAAZ;;EACO,SAASC,UAAT,CAAoBP,OAApB,EAA6B;EAClC;EACAJ,EAAAA,GAAG,CAACM,MAAJ,GAAcF,OAAd;EACAM,EAAAA,KAAK,CAACL,IAAN,CAAWD,OAAX;EACD;EAEO,SAASQ,SAAT,GAAqB;EAC3BF,EAAAA,KAAK,CAACG,GAAN;EACAb,EAAAA,GAAG,CAACM,MAAJ,GAAaI,KAAK,CAACA,KAAK,CAACI,MAAN,GAAe,CAAhB,CAAlB;EACD;;EClCD;;EAKA,MAAMC,QAAN,CAAc;EACZd,EAAAA,WAAW,CAAC1D,IAAD,EAAO;EAChB,SAAKsD,GAAL,GAAW,IAAIG,GAAJ,EAAX,CADgB;EAEhB;EACA;EACA;EAEA;EACA;EACA;;EACAjD,IAAAA,GAAG,CAACR,IAAD,EAAO,QAAP,EAAiB,IAAjB,CAAH;;EACA,QAAIuC,KAAK,CAACkC,OAAN,CAAczE,IAAd,CAAJ,EAAyB;EAEvB;EACA;EACAA,MAAAA,IAAI,CAAC0E,SAAL,GAAiBjC,YAAjB;EACA,WAAKY,aAAL,CAAmBrD,IAAnB;EACD,KAND,MAMO;EACL,WAAK2E,IAAL,CAAU3E,IAAV,EADK;EAEN;EACF,GApBW;;;EAsBZqD,EAAAA,aAAa,CAACrD,IAAD,EAAO;EAClB,SAAK,IAAI4E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG5E,IAAI,CAACuE,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;EACpC;EACAC,MAAAA,OAAO,CAAC7E,IAAI,CAAC4E,CAAD,CAAL,CAAP;EACD;EACF,GA3BW;;;EA6BZD,EAAAA,IAAI,CAAC3E,IAAD,EAAO;EACT,QAAI8E,IAAI,GAAGnE,MAAM,CAACmE,IAAP,CAAY9E,IAAZ,CAAX;;EACA,SAAK,IAAI4E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,IAAI,CAACP,MAAzB,EAAiCK,CAAC,EAAlC,EAAsC;EACpC,UAAInE,GAAG,GAAGqE,IAAI,CAACF,CAAD,CAAd;EACA,UAAIlE,KAAK,GAAGV,IAAI,CAACS,GAAD,CAAhB;EACAsE,MAAAA,cAAc,CAAC/E,IAAD,EAAOS,GAAP,EAAYC,KAAZ,CAAd;EACD;EACF;;EApCW;;EAuCd,SAASqE,cAAT,CAAwB/E,IAAxB,EAA8BS,GAA9B,EAAmCC,KAAnC,EAA0C;EACxC,MAAI4C,GAAG,GAAG,IAAIG,GAAJ,EAAV,CADwC;EAGxC;;EACA,MAAIuB,OAAO,GAAGH,OAAO,CAACnE,KAAD,CAArB,CAJwC;;EAKxCC,EAAAA,MAAM,CAACC,cAAP,CAAsBZ,IAAtB,EAA4BS,GAA5B,EAAiC;EAC/BI,IAAAA,YAAY,EAAE,IADiB;EAE/BC,IAAAA,UAAU,EAAE,IAFmB;;EAG/BI,IAAAA,GAAG,GAAG;EAAE;EACN;EACA;EACA,UAAIuC,GAAG,CAACM,MAAR,EAAgB;EAAE;EAChBT,QAAAA,GAAG,CAACU,MAAJ,GADc;EAEd;EAEA;EACA;;EACA,YAAIgB,OAAJ,EAAa;EAAE;EACbA,UAAAA,OAAO,CAAC1B,GAAR,CAAYU,MAAZ,GADW;;EAEX,cAAIzB,KAAK,CAACkC,OAAN,CAAc/D,KAAd,CAAJ,EAA0B;EACxBuE,YAAAA,WAAW,CAACvE,KAAD,CAAX;EACD;EACF;EACF;;EACD,aAAOA,KAAP;EACD,KApB8B;;EAqB/BS,IAAAA,GAAG,CAAC+D,MAAD,EAAS;EAAE;EACZ,UAAIxE,KAAK,KAAKwE,MAAd,EAAsB;EACtBrC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAFU;;EAIV+B,MAAAA,OAAO,CAACK,MAAD,CAAP;EACAxE,MAAAA,KAAK,GAAGwE,MAAR;EACA5B,MAAAA,GAAG,CAACC,MAAJ,GANU;EAOX;;EA5B8B,GAAjC;EA8BD;;EAED,SAAS0B,WAAT,CAAsBvE,KAAtB,EAA6B;EAC3B,OAAK,IAAIkE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlE,KAAK,CAAC6D,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;EACrClE,IAAAA,KAAK,CAACkE,CAAD,CAAL,CAASzB,MAAT,IAAmBzC,KAAK,CAACkE,CAAD,CAAL,CAASzB,MAAT,CAAgBG,GAAhB,CAAoBU,MAApB,EAAnB,CADqC;;EAErC,QAAIzB,KAAK,CAACkC,OAAN,CAAc/D,KAAK,CAACkE,CAAD,CAAnB,CAAJ,EAA6B;EAC3BK,MAAAA,WAAW,CAACvE,KAAK,CAACkE,CAAD,CAAN,CAAX;EACD;EACF;EACF;;EAEM,SAASC,OAAT,CAAkB7E,IAAlB,EAAwB;EAC7B;EACA,MAAImF,KAAK,GAAGpF,QAAQ,CAACC,IAAD,CAApB;EACA,MAAI,CAACmF,KAAL,EAAY;EACZ,SAAO,IAAIX,QAAJ,CAAaxE,IAAb,CAAP,CAJ6B;EAK9B;;EC7FM,SAASoF,SAAT,CAAmBpE,EAAnB,EAAuB;EAC5B,QAAMqE,IAAI,GAAGrE,EAAE,CAACsE,QAAhB,CAD4B;EAG5B;;EAEA,MAAGD,IAAI,CAACE,KAAR,EAAe;;EAIf,MAAGF,IAAI,CAAC3C,OAAR,EAAiB;;EAIjB,MAAG2C,IAAI,CAACrF,IAAR,EAAc;EACZwF,IAAAA,QAAQ,CAACxE,EAAD,CAAR;EACD;;EAED,MAAGqE,IAAI,CAACI,QAAR,EAAkB;;EAIlB,MAAGJ,IAAI,CAACK,KAAR,EAAe;EAGhB;;EAID,SAASF,QAAT,CAAkBxE,EAAlB,EAAsB;EACpB;EACA,MAAIhB,IAAI,GAAGgB,EAAE,CAACsE,QAAH,CAAYtF,IAAvB,CAFoB;;EAIpBA,EAAAA,IAAI,GAAGgB,EAAE,CAAC2E,KAAH,GAAW,OAAO3F,IAAP,KAAgB,UAAhB,GAA6BA,IAAI,CAAC4F,IAAL,CAAU5E,EAAV,CAA7B,GAA6ChB,IAA/D,CAJoB;EAOpB;;EACA,OAAK,IAAIS,GAAT,IAAgBT,IAAhB,EAAsB;EACpBe,IAAAA,KAAK,CAACC,EAAD,EAAK,OAAL,EAAcP,GAAd,CAAL;EACD,GAVmB;;;EAapBoE,EAAAA,OAAO,CAAC7E,IAAD,CAAP;EACD;;EC5CD;EACA;EACA,IAAI6F,SAAS,GAAG,EAAhB;EACA,IAAIC,OAAO,GAAG,KAAd;;EACA,SAASC,aAAT,GAA0B;EACxBF,EAAAA,SAAS,CAACvF,OAAV,CAAkB0F,QAAQ,IAAIA,QAAQ,EAAtC;EACAF,EAAAA,OAAO,GAAG,KAAV;EACD;EAED;EACA;;;EACO,SAASG,QAAT,CAAmBC,EAAnB,EAAuB;EAC5BL,EAAAA,SAAS,CAAC/B,IAAV,CAAeoC,EAAf;;EACA,MAAI,CAACJ,OAAL,EAAc;EACZK,IAAAA,UAAU,CAACJ,aAAD,EAAgB,CAAhB,CAAV;EACAD,IAAAA,OAAO,GAAG,IAAV;EACD;EACF;;ECfD,IAAIM,KAAK,GAAG,EAAZ;;EACA,IAAIC,GAAG,GAAG,EAAV;;EACA,SAASC,mBAAT,GAAgC;EAC9BF,EAAAA,KAAK,CAAC9F,OAAN,CAAcuD,OAAO,IAAIA,OAAO,CAAC0C,GAAR,EAAzB;EACAH,EAAAA,KAAK,GAAG,EAAR;EACAC,EAAAA,GAAG,GAAG,EAAN;EACD;;EACM,SAASG,YAAT,CAAuB3C,OAAvB,EAAgC;EACrC,MAAIL,EAAE,GAAGK,OAAO,CAACL,EAAjB;;EACA,MAAI,CAAC6C,GAAG,CAAC7C,EAAD,CAAR,EAAc;EACZ4C,IAAAA,KAAK,CAACtC,IAAN,CAAWD,OAAX;EACAwC,IAAAA,GAAG,CAAC7C,EAAD,CAAH,GAAU,IAAV;EACAyC,IAAAA,QAAQ,CAACK,mBAAD,CAAR,CAHY;EAKb;EACF;;ECfD,IAAI9C,IAAE,GAAG,CAAT;;EACA,MAAMiD,OAAN,CAAc;EAEZ/C,EAAAA,WAAW,CAAC1C,EAAD,EAAK0F,QAAL,EAAeV,QAAf,EAAyBW,OAAzB,EAAkC;EAC3C,SAAK3F,EAAL,GAAUA,EAAV;EACA,SAAKgF,QAAL,GAAgBA,QAAhB;EACA,SAAKW,OAAL,GAAeA,OAAf;EACA,SAAKnD,EAAL,GAAUA,IAAE,EAAZ;EACA,SAAKoD,MAAL,GAAcF,QAAd,CAL2C;;EAM3C,SAAKG,MAAL,GAAc,IAAIC,GAAJ,EAAd;EACA,SAAKC,IAAL,GAAY,EAAZ;EACA,SAAK7F,GAAL,GAR2C;EAS5C;;EAED+C,EAAAA,MAAM,CAAEX,GAAF,EAAO;EAAE;EACb,QAAIE,EAAE,GAAIF,GAAG,CAACE,EAAd;;EACA,QAAI,CAAC,KAAKqD,MAAL,CAAYR,GAAZ,CAAgB7C,EAAhB,CAAL,EAA0B;EACxB,WAAKqD,MAAL,CAAYG,GAAZ,CAAgBxD,EAAhB;EACA,WAAKuD,IAAL,CAAUjD,IAAV,CAAeR,GAAf,EAFwB;;EAIxBA,MAAAA,GAAG,CAACM,MAAJ,CAAW,IAAX;EACD;EACF;;EAED1C,EAAAA,GAAG,GAAG;EACJ;EACAkD,IAAAA,UAAU,CAAC,IAAD,CAAV;EACA,SAAKwC,MAAL;EACAvC,IAAAA,SAAS;EACV,GA5BW;EA+BZ;;;EACAH,EAAAA,MAAM,GAAG;EACP;EACA;EACAsC,IAAAA,YAAY,CAAC,IAAD,CAAZ;EACD;;EAEDD,EAAAA,GAAG,GAAI;EAAE;EACP,SAAKrF,GAAL;EACD;;EAxCW;;ECHP,SAAS+F,KAAT,CAAgBC,OAAhB,EAAyBC,KAAzB,EAAgC;EACrC;EAEA,MAAI,CAACD,OAAL,EAAc;EACZ;EACA,WAAOE,SAAS,CAACD,KAAD,CAAhB;EACD,GAHD,MAGO;EACL,UAAME,aAAa,GAAGH,OAAO,CAACI,QAA9B,CADK;;EAGL,QAAID,aAAJ,EAAmB;EACjB;EACN;EACA;EACA;EACA;EACM,YAAME,MAAM,GAAGL,OAAf;EACA,YAAMM,SAAS,GAAGD,MAAM,CAACE,UAAzB;EAEA,UAAIC,EAAE,GAAGN,SAAS,CAACD,KAAD,CAAlB,CATiB;;EAWjBK,MAAAA,SAAS,CAACG,YAAV,CAAuBD,EAAvB,EAA2BH,MAAM,CAACK,WAAlC;EACAJ,MAAAA,SAAS,CAACK,WAAV,CAAsBN,MAAtB;EAEA,aAAOG,EAAP;EACD,KAfD,MAeO;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA,UAAIR,OAAO,CAAC3G,GAAR,KAAgB4G,KAAK,CAAC5G,GAA1B,EAA+B;EAC7B2G,QAAAA,OAAO,CAACQ,EAAR,CAAWD,UAAX,CAAsBK,YAAtB,CAAmCV,SAAS,CAACD,KAAD,CAA5C,EAAqDD,OAAO,CAACQ,EAA7D;EACD,OAVI;;;EAYL,UAAI,CAACR,OAAO,CAAC3G,GAAb,EAAkB;EAChB,YAAI2G,OAAO,CAACa,IAAR,KAAiBZ,KAAK,CAACY,IAA3B,EAAiC;EAC/Bb,UAAAA,OAAO,CAACQ,EAAR,CAAWM,WAAX,GAAyBb,KAAK,CAACY,IAA/B;EACD;EACF,OAhBI;EAmBL;EACA;;;EACA,UAAIL,EAAE,GAAGP,KAAK,CAACO,EAAN,GAAWR,OAAO,CAACQ,EAA5B;EACAO,MAAAA,gBAAgB,CAACd,KAAD,EAAQD,OAAO,CAAClH,IAAhB,CAAhB,CAtBK;;EA0BL,UAAIkI,WAAW,GAAGhB,OAAO,CAACiB,QAAR,IAAoB,EAAtC;EACA,UAAIC,WAAW,GAAGjB,KAAK,CAACgB,QAAN,IAAkB,EAApC;;EAEA,UAAID,WAAW,CAAC3D,MAAZ,GAAqB,CAArB,IAA0B6D,WAAW,CAAC7D,MAAZ,GAAqB,CAAnD,EAAsD;EACpD;EACA;EACA8D,QAAAA,cAAc,CAACX,EAAD,EAAKQ,WAAL,EAAkBE,WAAlB,CAAd;EAED,OALD,MAKO,IAAIA,WAAW,CAAC7D,MAAZ,GAAqB,CAAzB,EAA4B;EACjC;EACA;EACA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwD,WAAW,CAAC7D,MAAhC,EAAwCK,CAAC,EAAzC,EAA6C;EAC3C,cAAI1C,KAAK,GAAGkG,WAAW,CAACxD,CAAD,CAAvB;EACA8C,UAAAA,EAAE,CAACY,WAAH,CAAelB,SAAS,CAAClF,KAAD,CAAxB;EACD;EACF,OAPM,MAOA,IAAIgG,WAAW,CAAC3D,MAAZ,GAAqB,CAAzB,EAA4B;EACjC;EACAmD,QAAAA,EAAE,CAACa,SAAH,GAAe,EAAf;EACD,OA5CI;;EA+CN;EACF;EAEF;;EAED,SAASC,WAAT,CAAsBC,QAAtB,EAAgCC,QAAhC,EAA0C;EACxC,SAAQD,QAAQ,CAAClI,GAAT,KAAiBmI,QAAQ,CAACnI,GAA3B,IAAoCkI,QAAQ,CAAChI,GAAT,KAAiBiI,QAAQ,CAACjI,GAArE;EACD;;EAED,SAAS4H,cAAT,CAAyBpG,MAAzB,EAAiCiG,WAAjC,EAA8CE,WAA9C,EAA2D;EACzD;EACA;EACA;EACA;EACA;EAEA,MAAIO,aAAa,GAAG,CAApB;EACA,MAAIC,aAAa,GAAGV,WAAW,CAACS,aAAD,CAA/B;EACA,MAAIE,WAAW,GAAGX,WAAW,CAAC3D,MAAZ,GAAqB,CAAvC;EACA,MAAIuE,WAAW,GAAGZ,WAAW,CAACW,WAAD,CAA7B;EACA,MAAIE,aAAa,GAAG,CAApB;EACA,MAAIC,aAAa,GAAGZ,WAAW,CAACW,aAAD,CAA/B;EACA,MAAIE,WAAW,GAAGb,WAAW,CAAC7D,MAAZ,GAAqB,CAAvC;EACA,MAAI2E,WAAW,GAAGd,WAAW,CAACa,WAAD,CAA7B;;EAEA,WAASE,cAAT,CAAyBhB,QAAzB,EAAmC;EACjC,QAAIiB,GAAG,GAAG,EAAV;EACAjB,IAAAA,QAAQ,CAAC7H,OAAT,CAAiB,CAAC+I,IAAD,EAAOC,KAAP,KAAiB;EAChC;EACA,UAAID,IAAI,CAAC5I,GAAT,EAAc;EACZ2I,QAAAA,GAAG,CAACC,IAAI,CAAC5I,GAAN,CAAH,GAAgB6I,KAAhB;EACD;EACF,KALD;EAMA,WAAOF,GAAP;EACD;;EACD,MAAIA,GAAG,GAAGD,cAAc,CAACjB,WAAD,CAAxB,CA1ByD;EA6BzD;EACA;EACA;EACA;EACA;EAGA;;EACA,SAAOS,aAAa,IAAIE,WAAlB,IAAmCE,aAAa,IAAIE,WAA1D,EAAwE;EAEtE;EACA,QAAIL,aAAa,IAAIW,SAArB,EAAgC;EAC9BX,MAAAA,aAAa,GAAGV,WAAW,CAAC,EAAES,aAAH,CAA3B;EACD,KAFD,MAEO,IAAIG,WAAW,IAAIS,SAAnB,EAA8B;EACnCT,MAAAA,WAAW,GAAGZ,WAAW,CAAC,EAAEW,WAAH,CAAzB;EACD,KAFM,MAEA;EACL;EACA;EACA,UAAIL,WAAW,CAACQ,aAAD,EAAgBJ,aAAhB,CAAf,EAA+C;EAC7C;EACA;EACA;EACA3B,QAAAA,KAAK,CAAC2B,aAAD,EAAgBI,aAAhB,CAAL;EAEAJ,QAAAA,aAAa,GAAGV,WAAW,CAAC,EAAES,aAAH,CAA3B;EACAK,QAAAA,aAAa,GAAGZ,WAAW,CAAC,EAAEW,aAAH,CAA3B;EACD,OARD,MAQO,IAAIP,WAAW,CAACU,WAAD,EAAcJ,WAAd,CAAf,EAA2C;EAChD;EACA;EACA;EACA7B,QAAAA,KAAK,CAAC6B,WAAD,EAAcI,WAAd,CAAL;EACAJ,QAAAA,WAAW,GAAGZ,WAAW,CAAC,EAAEW,WAAH,CAAzB;EACAK,QAAAA,WAAW,GAAGd,WAAW,CAAC,EAAEa,WAAH,CAAzB;EACD,OAPM,MAOA,IAAIT,WAAW,CAACI,aAAD,EAAgBM,WAAhB,CAAf,EAA6C;EAClD;EACA;EACA;EACA;EACA;EACA;EACA;EACAjC,QAAAA,KAAK,CAAC2B,aAAD,EAAgBM,WAAhB,CAAL;EACAjH,QAAAA,MAAM,CAAC0F,YAAP,CAAoBiB,aAAa,CAAClB,EAAlC,EAAsCoB,WAAW,CAACpB,EAAZ,CAAeE,WAArD;EACAsB,QAAAA,WAAW,GAAGd,WAAW,CAAC,EAAEa,WAAH,CAAzB;EACAL,QAAAA,aAAa,GAAGV,WAAW,CAAC,EAAES,aAAH,CAA3B;EACD,OAZM,MAYA,IAAIH,WAAW,CAACM,WAAD,EAAcE,aAAd,CAAf,EAA6C;EAClD;EACA/B,QAAAA,KAAK,CAAC6B,WAAD,EAAcE,aAAd,CAAL;EACA/G,QAAAA,MAAM,CAAC0F,YAAP,CAAoBmB,WAAW,CAACpB,EAAhC,EAAoCkB,aAAa,CAAClB,EAAlD;EACAoB,QAAAA,WAAW,GAAGZ,WAAW,CAAC,EAAEW,WAAH,CAAzB;EACAG,QAAAA,aAAa,GAAGZ,WAAW,CAAC,EAAEW,aAAH,CAA3B;EACD,OANM,MAMA;EACL;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA,YAAIS,SAAS,GAAGJ,GAAG,CAACJ,aAAa,CAACvI,GAAf,CAAnB;;EACA,YAAI,CAAC+I,SAAL,EAAgB;EAAE;EAChBvH,UAAAA,MAAM,CAAC0F,YAAP,CAAoBP,SAAS,CAAC4B,aAAD,CAA7B,EAA8CJ,aAAa,CAAClB,EAA5D;EACD,SAFD,MAEO;EAAE;EACP;EACA,cAAI+B,SAAS,GAAGvB,WAAW,CAACsB,SAAD,CAA3B;EACAtB,UAAAA,WAAW,CAACsB,SAAD,CAAX,GAAyBD,SAAzB;EACAtH,UAAAA,MAAM,CAAC0F,YAAP,CAAoB8B,SAAS,CAAC/B,EAA9B,EAAkCkB,aAAa,CAAClB,EAAhD,EAJK;;EAMLT,UAAAA,KAAK,CAACwC,SAAD,EAAYT,aAAZ,CAAL;EACD,SAtBI;;;EAwBLA,QAAAA,aAAa,GAAGZ,WAAW,CAAC,EAAEW,aAAH,CAA3B,CAxBK;EA0BN;EACF;EACF,GA5GwD;EA8GzD;EACA;EACA;;;EACA,MAAIA,aAAa,IAAIE,WAArB,EAAkC;EAChC,SAAI,IAAIrE,CAAC,GAAGmE,aAAZ,EAA2BnE,CAAC,IAAIqE,WAAhC,EAA6CrE,CAAC,EAA9C,EAAkD;EAChD;EACN;EACA;EACA;EACA;EACA;EACA;EACA;EACM,UAAI8C,EAAE,GAAGU,WAAW,CAACa,WAAW,GAAG,CAAf,CAAX,IAAgC,IAAhC,GAAuC,IAAvC,GAA8Cb,WAAW,CAACa,WAAW,GAAG,CAAf,CAAX,CAA6BvB,EAApF,CATgD;;EAWhDzF,MAAAA,MAAM,CAAC0F,YAAP,CAAoBP,SAAS,CAACgB,WAAW,CAACxD,CAAD,CAAZ,CAA7B,EAA+C8C,EAA/C;EACD;EACF,GA/HwD;;;EAmIzD,MAAIiB,aAAa,IAAIE,WAArB,EAAkC;EAChC,SAAK,IAAIjE,CAAC,GAAG+D,aAAb,EAA4B/D,CAAC,IAAIiE,WAAjC,EAA8CjE,CAAC,EAA/C,EAAmD;EACjD,UAAIsD,WAAW,CAACtD,CAAD,CAAX,IAAiB2E,SAArB,EAAgC;EAC9BtH,QAAAA,MAAM,CAAC4F,WAAP,CAAmBK,WAAW,CAACtD,CAAD,CAAX,CAAe8C,EAAlC;EACD;EACF;EACF;EACF;;EACD,SAASgC,eAAT,CAAyBvC,KAAzB,EAAgC;EAC9B,MAAIvC,CAAC,GAAGuC,KAAK,CAACnH,IAAd,CAD8B;;EAG9B,MAAI,CAAC4E,CAAC,GAAGA,CAAC,CAACjD,IAAP,MAAiBiD,CAAC,GAAGA,CAAC,CAAC+E,IAAvB,CAAJ,EAAkC;EAChC/E,IAAAA,CAAC,CAACuC,KAAD,CAAD;EACD,GAL6B;EAS9B;;;EACA,MAAIA,KAAK,CAACyC,iBAAV,EAA6B;EAC3B;EACA,WAAO,IAAP;EACD;EACF;;EAGM,SAASxC,SAAT,CAAoBD,KAApB,EAA2B;EAAE;EAClC;EACA,MAAI;EAAC5G,IAAAA,GAAD;EAAM4H,IAAAA,QAAN;EAAgBnI,IAAAA,IAAhB;EAAsBS,IAAAA,GAAtB;EAA2BsH,IAAAA;EAA3B,MAAmCZ,KAAvC;;EACA,MAAI,OAAO5G,GAAP,KAAe,QAAnB,EAA6B;EAE3B;EAEA;EACA;EACA,QAAImJ,eAAe,CAACvC,KAAD,CAAnB,EAA4B;EAC1B;EACA;EACA,aAAOA,KAAK,CAACyC,iBAAN,CAAwBC,GAA/B;EACD,KAV0B;;;EAY3B1C,IAAAA,KAAK,CAACO,EAAN,GAAWoC,QAAQ,CAACC,aAAT,CAAuBxJ,GAAvB,CAAX;EAEA0H,IAAAA,gBAAgB,CAACd,KAAD,CAAhB;EAEAA,IAAAA,KAAK,CAACgB,QAAN,CAAe7H,OAAf,CAAuB4B,KAAK,IAAI;EAC9B,aAAOiF,KAAK,CAACO,EAAN,CAASY,WAAT,CAAqBlB,SAAS,CAAClF,KAAD,CAA9B,CAAP;EACD,KAFD;EAID,GApBD,MAoBO;EACL;EACAiF,IAAAA,KAAK,CAACO,EAAN,GAAWoC,QAAQ,CAACE,cAAT,CAAwBjC,IAAxB,CAAX;EACD;;EAED,SAAOZ,KAAK,CAACO,EAAb;EACD;;EAED,SAASO,gBAAT,CAA2Bd,KAA3B,EAAkC8C,QAAQ,GAAG,EAA7C,EAAiD;EAC/C,QAAMC,QAAQ,GAAG/C,KAAK,CAACnH,IAAN,IAAc,EAA/B,CAD+C;EAI/C;;EACA,QAAM0H,EAAE,GAAGP,KAAK,CAACO,EAAjB;;EAEA,OAAK,IAAI9C,CAAT,IAAcqF,QAAd,EAAwB;EACtB,QAAI,CAACC,QAAQ,CAACtF,CAAD,CAAb,EAAkB;EAChB8C,MAAAA,EAAE,CAACyC,eAAH,CAAmBvF,CAAnB;EACD;EACF;;EACD,MAAIwF,QAAQ,GAAGF,QAAQ,CAACG,KAAT,IAAkB,EAAjC;EACA,MAAIC,QAAQ,GAAGL,QAAQ,CAACI,KAAT,IAAkB,EAAjC;;EACA,OAAK,IAAIzF,CAAT,IAAc0F,QAAd,EAAwB;EACtB,QAAI,CAACF,QAAQ,CAACxF,CAAD,CAAb,EAAkB;EAChB8C,MAAAA,EAAE,CAAC2C,KAAH,CAASzF,CAAT,IAAc,EAAd;EACD;EACF,GAlB8C;;;EAoB/C,OAAK,IAAInE,GAAT,IAAgByJ,QAAhB,EAA0B;EACxB;EACA,QAAIzJ,GAAG,KAAK,OAAZ,EAAqB;EACnB,WAAK,IAAI8J,SAAT,IAAsBL,QAAQ,CAACG,KAA/B,EAAsC;EACpC3C,QAAAA,EAAE,CAAC2C,KAAH,CAASE,SAAT,IAAsBL,QAAQ,CAACG,KAAT,CAAeE,SAAf,CAAtB;EACD;EACF,KAJD,MAIO,IAAI9J,GAAG,KAAK,OAAZ,EAAqB;EAC1BiH,MAAAA,EAAE,CAAC8C,SAAH,GAAeN,QAAQ,CAACO,KAAxB;EACD,KAFM,MAEA;EACL/C,MAAAA,EAAE,CAACgD,YAAH,CAAgBjK,GAAhB,EAAqByJ,QAAQ,CAACzJ,GAAD,CAA7B;EACD;EACF;EAEF;;EC1SM,SAASkK,cAAT,CAAwBC,GAAxB,EAA6B;EAClCA,EAAAA,GAAG,CAACpI,SAAJ,CAAcqI,OAAd,GAAwB,UAAU1D,KAAV,EAAiB;EACvC;EAEA,UAAMnG,EAAE,GAAG,IAAX,CAHuC;EAMvC;EACA;;EACA,QAAI8J,SAAS,GAAG9J,EAAE,CAAC+J,MAAnB;EACA/J,IAAAA,EAAE,CAAC+J,MAAH,GAAY5D,KAAZ,CATuC;;EAWvC;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;;EAEI,QAAI,CAAC2D,SAAL,EAAgB;EACd;EACA9J,MAAAA,EAAE,CAAC6I,GAAH,GAAS5C,KAAK,CAACjG,EAAE,CAAC6I,GAAJ,EAAS1C,KAAT,CAAd,CAFc;EAGf,KAHD,MAGO;EACLnG,MAAAA,EAAE,CAAC6I,GAAH,GAAS5C,KAAK,CAAC6D,SAAD,EAAY3D,KAAZ,CAAd;EACD,KAzBsC;EA4BvC;;EAGD,GA/BD;EAgCD;EAGM,SAAS6D,cAAT,CAAwBhK,EAAxB,EAA4B0G,EAA5B,EAAgC;EACrC,QAAMf,OAAO,GAAG3F,EAAE,CAACsE,QAAnB,CADqC;;EAErCtE,EAAAA,EAAE,CAAC6I,GAAH,GAASnC,EAAT,CAFqC;EAIrC;EAEA;;EACAuD,EAAAA,QAAQ,CAACjK,EAAD,EAAK,aAAL,CAAR,CAPqC;EASrC;EACA;EACA;;EACA,MAAIkK,eAAe,GAAG,MAAM;EAAE;EAE5B;EAGA;EACAlK,IAAAA,EAAE,CAAC6J,OAAH,CAAW7J,EAAE,CAACmK,OAAH,EAAX,EAN0B;;EAS3B,GATD,CAZqC;EAyBrC;;;EACA,MAAI1E,OAAJ,CAAYzF,EAAZ,EAAgBkK,eAAhB,EAAiC,MAAM,EAAvC,EAA2C,IAA3C,EA1BqC;EA4BrC;;EACAD,EAAAA,QAAQ,CAACjK,EAAD,EAAK,SAAL,CAAR,CA7BqC;EA8BtC;EAEM,SAASiK,QAAT,CAAmBjK,EAAnB,EAAuBW,IAAvB,EAA6B;EAClC;EACA,QAAMyJ,QAAQ,GAAGpK,EAAE,CAACsE,QAAH,CAAY3D,IAAZ,CAAjB;;EACA,MAAIyJ,QAAJ,EAAc;EACZ,SAAK,IAAIxG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwG,QAAQ,CAAC7G,MAA7B,EAAqCK,CAAC,EAAtC,EAA0C;EACxCwG,MAAAA,QAAQ,CAACxG,CAAD,CAAR,CAAYgB,IAAZ,CAAiB5E,EAAjB;EACD;EACF;EACF;;EC9ED,MAAMqK,MAAM,GAAI,8BAAhB;;EACA,MAAMC,YAAY,GAAI,OAAMD,MAAO,QAAOA,MAAO,GAAjD;;EACA,MAAME,YAAY,GAAG,IAAIC,MAAJ,CAAY,KAAIF,YAAa,EAA7B,CAArB;;EACA,MAAMG,MAAM,GAAG,IAAID,MAAJ,CAAY,QAAOF,YAAa,QAAhC,CAAf;;EACA,MAAMI,SAAS,GAAG,2EAAlB;;EACA,MAAMC,aAAa,GAAG,YAAtB;;EAKO,SAASC,SAAT,CAAoBC,IAApB,EAA0B;EAC/B,MAAIC,IAAI,GAAG,IAAX,CAD+B;;EAE/B,MAAIC,aAAa,GAAG,IAApB,CAF+B;;EAG/B,MAAI5H,KAAK,GAAG,EAAZ,CAH+B;;EAI/B,QAAM6H,YAAY,GAAG,CAArB;EACA,QAAMC,SAAS,GAAG,CAAlB,CAL+B;;EAQ/B,WAASC,gBAAT,CAA0BhM,OAA1B,EAAmCiM,KAAnC,EAA0C;EACxC,WAAO;EACL5L,MAAAA,GAAG,EAAEL,OADA;EAELkM,MAAAA,IAAI,EAAEJ,YAFD;EAGLG,MAAAA,KAHK;EAILhE,MAAAA,QAAQ,EAAE,EAJL;EAKLlG,MAAAA,MAAM,EAAE;EALH,KAAP;EAOD;;EAGD,WAASoK,KAAT,CAAgBnM,OAAhB,EAAyBiM,KAAzB,EAAgC;EAC9B;EACA,QAAIG,OAAO,GAAGJ,gBAAgB,CAAChM,OAAD,EAAUiM,KAAV,CAA9B,CAF8B;EAK9B;;EACA,QAAI,CAACL,IAAL,EAAW;EACTA,MAAAA,IAAI,GAAGQ,OAAP;EACD,KAR6B;EAU9B;;;EACAP,IAAAA,aAAa,GAAGO,OAAhB;EACAnI,IAAAA,KAAK,CAACL,IAAN,CAAWwI,OAAX;EACD;;EACD,WAASC,KAAT,CAAexE,IAAf,EAAqB;EACnB;EACA;EACAA,IAAAA,IAAI,GAAGA,IAAI,CAACyE,OAAL,CAAa,KAAb,EAAoB,EAApB,CAAP;;EACA,QAAIzE,IAAJ,EAAU;EACRgE,MAAAA,aAAa,CAAC5D,QAAd,CAAuBrE,IAAvB,CAA4B;EAC1BiE,QAAAA,IAD0B;EAE1BqE,QAAAA,IAAI,EAAEH;EAFoB,OAA5B;EAID;EACF,GA3C8B;;;EA6C/B,WAASQ,GAAT,CAAavM,OAAb,EAAsB;EACpB;EACA;EACA,QAAIoM,OAAO,GAAGnI,KAAK,CAACG,GAAN,EAAd;;EACA,QAAIgI,OAAJ,EAAa;EACX,UAAIA,OAAO,CAAC/L,GAAR,KAAgBL,OAApB,EAA6B;EAC3B;EACA6L,QAAAA,aAAa,GAAG5H,KAAK,CAACA,KAAK,CAACI,MAAN,GAAe,CAAhB,CAArB,CAF2B;;EAI3B,YAAIwH,aAAJ,EAAmB;EACjBO,UAAAA,OAAO,CAACrK,MAAR,GAAiB8J,aAAjB;EACAA,UAAAA,aAAa,CAAC5D,QAAd,CAAuBrE,IAAvB,CAA4BwI,OAA5B;EACD;EACF;EACF;EACF,GA5D8B;;;EA8D/B,SAAMT,IAAN,EAAY;EACV,QAAIa,OAAO,GAAGb,IAAI,CAACc,OAAL,CAAa,GAAb,CAAd,CADU;;EAGV,QAAID,OAAO,KAAK,CAAhB,EAAmB;EACjB,UAAIE,aAAa,GAAGC,aAAa,EAAjC,CADiB;;EAEjB,UAAID,aAAJ,EAAmB;EACjBP,QAAAA,KAAK,CAACO,aAAa,CAAC1M,OAAf,EAAwB0M,aAAa,CAACT,KAAtC,CAAL,CADiB;;EAGjB,iBAHiB;EAIlB;;EAED,UAAIW,WAAW,GAAGjB,IAAI,CAACkB,KAAL,CAAWtB,MAAX,CAAlB;;EACA,UAAIqB,WAAJ,EAAiB;EACfE,QAAAA,OAAO,CAACF,WAAW,CAAC,CAAD,CAAX,CAAevI,MAAhB,CAAP;EACAkI,QAAAA,GAAG,CAACK,WAAW,CAAC,CAAD,CAAZ,CAAH;EACA;EACD;EACF,KAjBS;;;EAoBV,QAAI/E,IAAI,GAAG,EAAX;;EACA,QAAG2E,OAAO,IAAI,CAAd,EAAiB;EACf3E,MAAAA,IAAI,GAAG8D,IAAI,CAACoB,SAAL,CAAe,CAAf,EAAkBP,OAAlB,CAAP;EACD;;EACD,QAAI3E,IAAJ,EAAU;EACRwE,MAAAA,KAAK,CAACxE,IAAD,CAAL;EACAiF,MAAAA,OAAO,CAACjF,IAAI,CAACxD,MAAN,CAAP,CAFQ;EAIR;EACD;EACF;;EAED,WAASyI,OAAT,CAAiBE,CAAjB,EAAoB;EAClBrB,IAAAA,IAAI,GAAGA,IAAI,CAACoB,SAAL,CAAeC,CAAf,CAAP;EACD;;EAGD,WAASL,aAAT,GAAyB;EACvB,QAAIR,KAAK,GAAGR,IAAI,CAACkB,KAAL,CAAWxB,YAAX,CAAZ;;EACA,QAAIc,KAAJ,EAAW;EACT;EACA,YAAMU,KAAK,GAAG;EACZ7M,QAAAA,OAAO,EAAEmM,KAAK,CAAC,CAAD,CADF;EAEZF,QAAAA,KAAK,EAAE;EAFK,OAAd,CAFS;;EAOTa,MAAAA,OAAO,CAACX,KAAK,CAAC,CAAD,CAAL,CAAS9H,MAAV,CAAP,CAPS;EAST;;EACA,UAAIkI,GAAG,GAAG,IAAV;EACA,UAAIU,IAAI,GAAG,IAAX;;EACA,aAAM,EAAEV,GAAG,GAAGZ,IAAI,CAACkB,KAAL,CAAWpB,aAAX,CAAR,MAAuCwB,IAAI,GAAGtB,IAAI,CAACkB,KAAL,CAAWrB,SAAX,CAA9C,CAAN,EAA4E;EAC1EqB,QAAAA,KAAK,CAACZ,KAAN,CAAYrI,IAAZ,CAAiB;EACfsJ,UAAAA,IAAI,EAAED,IAAI,CAAC,CAAD,CADK;EAEfzM,UAAAA,KAAK,EAAEyM,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAf,IAAsBA,IAAI,CAAC,CAAD;EAFlB,SAAjB;EAIAH,QAAAA,OAAO,CAACG,IAAI,CAAC,CAAD,CAAJ,CAAQ5I,MAAT,CAAP;EACD,OAlBQ;;;EAoBT,UAAIkI,GAAJ,EAAS;EACPO,QAAAA,OAAO,CAACP,GAAG,CAAC,CAAD,CAAH,CAAOlI,MAAR,CAAP;EACA,eAAOwI,KAAP;EACD;EACF,KA1BsB;EA4BvB;;EACD;;EACD,SAAOjB,IAAP;EACD;;EC5ID,MAAMuB,YAAY,GAAG,0BAArB;;EAEA,SAASC,QAAT,CAAmBnB,KAAnB,EAA0B;EACxB,MAAIhM,GAAG,GAAG,EAAV;;EACA,OAAK,IAAIyE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuH,KAAK,CAAC5H,MAA1B,EAAkCK,CAAC,EAAnC,EAAuC;EACrC,QAAIuI,IAAI,GAAGhB,KAAK,CAACvH,CAAD,CAAhB;;EACA,QAAIuI,IAAI,CAACC,IAAL,KAAc,OAAlB,EAA2B;EAAE;EAC3B,UAAIhN,GAAG,GAAG,EAAV;EACA,UAAImN,UAAU,GAAGJ,IAAI,CAACzM,KAAL,CAAWL,KAAX,CAAiB,GAAjB,CAAjB;EACAkN,MAAAA,UAAU,CAACjN,OAAX,CAAmB+I,IAAI,IAAI;EACzB,YAAI,CAAC5I,GAAD,EAAMC,KAAN,IAAe2I,IAAI,CAACmE,IAAL,GAAYnN,KAAZ,CAAkB,GAAlB,CAAnB;EACAD,QAAAA,GAAG,CAACK,GAAD,CAAH,GAAWC,KAAK,IAAIA,KAAK,CAAC8M,IAAN,EAApB;EACD,OAHD;EAIAL,MAAAA,IAAI,CAACzM,KAAL,GAAaN,GAAb;EACD;;EACDD,IAAAA,GAAG,IAAK,GAAEgN,IAAI,CAACC,IAAK,IAAGK,IAAI,CAACC,SAAL,CAAeP,IAAI,CAACzM,KAApB,CAA2B,GAAlD;EACD;;EACD,SAAQ,IAAGP,GAAG,CAACiD,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAiB,GAA5B;EACD;;EAED,SAAUuK,WAAV,CAAsBjG,EAAtB,EAA0B;EACxB,MAAIS,QAAQ,GAAIT,EAAE,CAACS,QAAnB;;EACA,MAAIA,QAAQ,IAAIA,QAAQ,CAAC5D,MAAzB,EAAiC;EAC/B,WAAQ,GAAE4D,QAAQ,CAACiB,GAAT,CAAawE,CAAC,IAAIC,GAAG,CAACD,CAAD,CAArB,EAA0BE,IAA1B,CAA+B,GAA/B,CAAoC,EAA9C;EACD,GAFD,MAEM;EACJ,WAAO,KAAP;EACD;EACF;;EAED,SAASD,GAAT,CAAaE,IAAb,EAAmB;EACjB,MAAIA,IAAI,CAAC3B,IAAL,KAAc,CAAlB,EAAqB;EACnB,WAAO4B,QAAQ,CAACD,IAAD,CAAf;EACD,GAFD,MAEO;EACL;EACA,QAAIhG,IAAI,GAAGgG,IAAI,CAAChG,IAAhB,CAFK;;EAGL,QAAIkG,MAAM,GAAG,EAAb;EACA,QAAIlB,KAAK,GAAG,IAAZ;EACA,QAAIzD,KAAK,GAAG,IAAZ,CALK;;EAOL,QAAI4E,SAAS,GAAGb,YAAY,CAACa,SAAb,GAAyB,CAAzC;;EACA,WAAMnB,KAAK,GAAGM,YAAY,CAACc,IAAb,CAAkBpG,IAAlB,CAAd,EAAuC;EACrCuB,MAAAA,KAAK,GAAGyD,KAAK,CAACzD,KAAd;;EACA,UAAIA,KAAK,GAAG4E,SAAZ,EAAuB;EACrBD,QAAAA,MAAM,CAACnK,IAAP,CAAY2J,IAAI,CAACC,SAAL,CAAe3F,IAAI,CAAC3E,KAAL,CAAW8K,SAAX,EAAsB5E,KAAtB,CAAf,CAAZ;EACD;;EACD2E,MAAAA,MAAM,CAACnK,IAAP,CAAa,MAAKiJ,KAAK,CAAC,CAAD,CAAL,CAASS,IAAT,EAAgB,GAAlC;EACAU,MAAAA,SAAS,GAAG5E,KAAK,GAAGyD,KAAK,CAAC,CAAD,CAAL,CAASxI,MAA7B;EACD,KAfI;EAiBJ;;;EACD,QAAI2J,SAAS,GAAGnG,IAAI,CAACxD,MAArB,EAA6B;EAC3B0J,MAAAA,MAAM,CAACnK,IAAP,CAAY2J,IAAI,CAACC,SAAL,CAAe3F,IAAI,CAAC3E,KAAL,CAAW8K,SAAX,CAAf,CAAZ;EACD;;EACD,WAAQ,MAAKD,MAAM,CAACH,IAAP,CAAY,GAAZ,CAAiB,GAA9B;EACD;EACF;;EAEM,SAASE,QAAT,CAAmBtG,EAAnB,EAAuB;EAC5B,MAAIS,QAAQ,GAAGwF,WAAW,CAACjG,EAAD,CAA1B;EACA,MAAI0G,IAAI,GAAI,OAAM1G,EAAE,CAACnH,GAAI,MACxBmH,EAAE,CAACyE,KAAH,CAAS5H,MAAT,GAAkB+I,QAAQ,CAAC5F,EAAE,CAACyE,KAAJ,CAA1B,GAAuC,WAD7B;AAGV,KAAEhE,QAAQ,GAAI,IAAIA,QAAU,EAAlB,GAAsB,EAAG,GAHpC;EAKA,SAAOiG,IAAP;EACD;;EChED;EAKO,SAASC,iBAAT,CAA2BC,QAA3B,EAAqC;EAE1C;EACA;EACA,MAAIxC,IAAI,GAAGF,SAAS,CAAC0C,QAAD,CAApB,CAJ0C;EAO1C;EAGA;EACA;EACA;EACA;EACA;;EAEA,MAAIF,IAAI,GAAGJ,QAAQ,CAAClC,IAAD,CAAnB,CAhB0C;EAkB1C;EACA;;EACA,MAAIyC,QAAQ,GAAG,IAAIC,QAAJ,CAAc,sBAAqBJ,IAAK,IAAxC,CAAf,CApB0C;;EAsB1C,SAAOG,QAAP;EACD;;EC7BD;EAUO,SAASE,SAAT,CAAoB7D,GAApB,EAAyB;EAC9BA,EAAAA,GAAG,CAACpI,SAAJ,CAAckM,KAAd,GAAsB,UAAU/H,OAAV,EAAmB;EACvC;EAEA,UAAM3F,EAAE,GAAI,IAAZ,CAHuC;EAKvC;;EACAA,IAAAA,EAAE,CAACsE,QAAH,GAAetD,cAAY,CAAChB,EAAE,CAAC0C,WAAH,CAAeiD,OAAhB,EAAyBA,OAAzB,CAA3B,CANuC;EAQvC;EACA;;EACAsE,IAAAA,QAAQ,CAACjK,EAAD,EAAK,cAAL,CAAR;EAEAoE,IAAAA,SAAS,CAACpE,EAAD,CAAT;EAEAiK,IAAAA,QAAQ,CAACjK,EAAD,EAAK,SAAL,CAAR,CAduC;EAiBvC;EACA;;EACA,QAAIA,EAAE,CAACsE,QAAH,CAAYoC,EAAhB,EAAoB;EAClB1G,MAAAA,EAAE,CAAC2N,MAAH,CAAU3N,EAAE,CAACsE,QAAH,CAAYoC,EAAtB;EACD;EACF,GAtBD,CAD8B;;;EA0B9BkD,EAAAA,GAAG,CAACpI,SAAJ,CAAcmM,MAAd,GAAuB,UAASjH,EAAT,EAAa;EAClC,UAAM1G,EAAE,GAAG,IAAX;EACA,UAAM2F,OAAO,GAAG3F,EAAE,CAACsE,QAAnB,CAFkC;;EAIlCoC,IAAAA,EAAE,GAAGoC,QAAQ,CAAC8E,aAAT,CAAuBlH,EAAvB,CAAL,CAJkC;EAOlC;EACA;;EAEA,QAAG,CAACf,OAAO,CAACkI,MAAZ,EAAoB;EAClB;EACA;EACA,UAAIP,QAAQ,GAAG3H,OAAO,CAAC2H,QAAvB,CAHkB;;EAKlB,UAAG,CAACA,QAAD,IAAa5G,EAAhB,EAAoB;EAClB4G,QAAAA,QAAQ,GAAG5G,EAAE,CAACoH,SAAd;EACD,OAPiB;;;EASlB,YAAMD,MAAM,GAAGR,iBAAiB,CAACC,QAAD,CAAhC;EACA3H,MAAAA,OAAO,CAACkI,MAAR,GAAiBA,MAAjB;EACD,KArBiC;;;EAwBlC7D,IAAAA,cAAc,CAAChK,EAAD,EAAK0G,EAAL,CAAd;EAED,GA1BD;;EA4BAkD,EAAAA,GAAG,CAACpI,SAAJ,CAAcuM,SAAd,GAA0B9I,QAA1B;EAED;;EChEM,SAAS8D,aAAT,CAAwB/I,EAAxB,EAA4BT,GAA5B,EAAiCP,IAAI,GAAG,EAAxC,EAA4C,GAAGmI,QAA/C,EAAyD;EAC9D;EACA,MAAI1H,GAAG,GAAGT,IAAI,CAACS,GAAf;;EACA,MAAIA,GAAJ,EAAS;EACP,WAAOT,IAAI,CAACS,GAAZ;EACD,GAL6D;;;EAQ9D,MAAIR,aAAa,CAACM,GAAD,CAAjB,EAAwB;EACtB,WAAO4G,KAAK,CAAC5G,GAAD,EAAMP,IAAN,EAAYS,GAAZ,EAAiB0H,QAAjB,EAA2BoB,SAA3B,CAAZ;EACD,GAFD,MAEO;EACL;EACA;EACA;EACA,QAAIyF,IAAI,GAAGhO,EAAE,CAACsE,QAAH,CAAYvD,UAAZ,CAAuBxB,GAAvB,CAAX;EACA,WAAOmJ,iBAAe,CAAC1I,EAAD,EAAKT,GAAL,EAAUP,IAAV,EAAgBS,GAAhB,EAAqB0H,QAArB,EAA+B6G,IAA/B,CAAtB;EACD;EACF;;EAED,SAAStF,iBAAT,CAAyB1I,EAAzB,EAA6BT,GAA7B,EAAkCP,IAAlC,EAAwCS,GAAxC,EAA6C0H,QAA7C,EAAuD6G,IAAvD,EAA6D;EAC3D;EACA,MAAIjP,QAAQ,CAACiP,IAAD,CAAZ,EAAoB;EAClBA,IAAAA,IAAI,GAAGhO,EAAE,CAACsE,QAAH,CAAY2J,KAAZ,CAAkBC,MAAlB,CAAyBF,IAAzB,CAAP;EACD,GAJ0D;EAM3D;;;EACAhP,EAAAA,IAAI,CAAC2B,IAAL,GAAY;EACVgI,IAAAA,IAAI,CAAExC,KAAF,EAAS;EACX;EACA,UAAIjF,KAAK,GAAGiF,KAAK,CAACyC,iBAAN,GAA0B,IAAIoF,IAAJ,CAAS;EAAEG,QAAAA,YAAY,EAAE;EAAhB,OAAT,CAAtC;EACAjN,MAAAA,KAAK,CAACyM,MAAN,GAHW;EAIZ,KALS;;EAMV1L,IAAAA,QAAQ,GAAI;;EANF,GAAZ;EAUA,SAAOkE,KAAK,CAAE,iBAAgB6H,IAAI,CAACI,GAAI,IAAG7O,GAAI,EAAlC,EAAqCP,IAArC,EAA2CS,GAA3C,EAAgD8I,SAAhD,EAA2D;EAACyF,IAAAA,IAAD;EAAO7G,IAAAA;EAAP,GAA3D,CAAZ;EACD;;EAEM,SAAS6B,cAAT,CAAyBhJ,EAAzB,EAA6B+G,IAA7B,EAAmC;EACxC;EACA,SAAOZ,KAAK,CAACoC,SAAD,EAAYA,SAAZ,EAAuBA,SAAvB,EAAkCA,SAAlC,EAA6CxB,IAA7C,CAAZ;EACD;;EAED,SAASZ,KAAT,CAAe5G,GAAf,EAAoBP,IAApB,EAA0BS,GAA1B,EAA+B0H,QAA/B,EAAyCJ,IAAzC,EAA+CsH,gBAA/C,EAAiE;EAC/D,SAAO;EACL9O,IAAAA,GADK;EAELP,IAAAA,IAFK;EAGLS,IAAAA,GAHK;EAIL0H,IAAAA,QAJK;EAKLJ,IAAAA,IALK;EAMLsH,IAAAA;EANK,GAAP;EAQD;EAID;EACA;;EC1DO,SAASC,WAAT,CAAqB1E,GAArB,EAA0B;EAC/B;EAEA;EACA;EACA;EAEAA,EAAAA,GAAG,CAACpI,SAAJ,CAAc+M,EAAd,GAAmB,YAAY;EAC7B,WAAOxF,aAAa,CAAC,IAAD,EAAO,GAAGyF,SAAV,CAApB,CAD6B;EAE9B,GAFD;;EAIA5E,EAAAA,GAAG,CAACpI,SAAJ,CAAciN,EAAd,GAAmB,UAAU1H,IAAV,EAAgB;EACjC,WAAOiC,cAAc,CAAC,IAAD,EAAOjC,IAAP,CAArB;EACD,GAFD;;EAIA6C,EAAAA,GAAG,CAACpI,SAAJ,CAAckN,EAAd,GAAmB,UAAUC,GAAV,EAAe;EAChC;EACA,WAAOA,GAAG,IAAI,IAAP,GAAc,EAAd,GAAoB,OAAOA,GAAP,KAAe,QAAf,GAA0BlC,IAAI,CAACC,SAAL,CAAeiC,GAAf,CAA1B,GAAgDA,GAA3E;EACD,GAHD;;EAKA/E,EAAAA,GAAG,CAACpI,SAAJ,CAAc2I,OAAd,GAAwB,YAAY;EAClC;EACA,UAAMnK,EAAE,GAAG,IAAX;EACA,UAAM;EAAE6N,MAAAA;EAAF,QAAa7N,EAAE,CAACsE,QAAtB,CAHkC;EAOlC;EACA;;EACA,QAAI6B,KAAK,GAAG0H,MAAM,CAACjJ,IAAP,CAAY5E,EAAZ,CAAZ,CATkC;EAUlC;;EACA,WAAOmG,KAAP;EACD,GAZD;EAaD;;ECnCc,SAASsH,WAAT,CAAoB7D,GAApB,EAAyB;EAEtCA,EAAAA,GAAG,CAACgF,KAAJ,GAAY,UAAUA,KAAV,EAAiB;EAE3B;EACA;EACA,SAAKjJ,OAAL,GAAe3E,YAAY,CAAC,KAAK2E,OAAN,EAAeiJ,KAAf,CAA3B;EAED,GAND,CAFsC;EAYtC;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACD;;EC3Bc,SAASC,UAAT,CAAqBjF,GAArB,EAA0B;EACvC,MAAIwE,GAAG,GAAG,CAAV;;EACAxE,EAAAA,GAAG,CAACsE,MAAJ,GAAa,UAAUY,aAAV,EAAyB;EACpC;EACA;EAEA,UAAMC,GAAG,GAAG,SAASC,YAAT,CAAuBrJ,OAAvB,EAAgC;EAC1C;EACA,WAAK+H,KAAL,CAAW/H,OAAX;EACD,KAHD;;EAIAoJ,IAAAA,GAAG,CAACX,GAAJ,GAAUA,GAAG,EAAb;EACAW,IAAAA,GAAG,CAACvN,SAAJ,GAAgB7B,MAAM,CAACmB,MAAP,CAAc,KAAKU,SAAnB,CAAhB;EACAuN,IAAAA,GAAG,CAACvN,SAAJ,CAAckB,WAAd,GAA4BqM,GAA5B,CAVoC;;EAYpCA,IAAAA,GAAG,CAACpJ,OAAJ,GAAc3E,cAAY,CAAC,KAAK2E,OAAN,EAAemJ,aAAf,CAA1B,CAZoC;;EAepC,WAAOC,GAAP;EACD,GAhBD;EAiBD;;ECpBM,MAAME,WAAW,GAAG,CACzB,WADyB,EAEzB,QAFyB,EAGzB,WAHyB,CAApB;;ECEQ,SAASC,iBAAT,CAA4BtF,GAA5B,EAAiC;EAC9C;EACA;EACAqF,EAAAA,WAAW,CAAC3P,OAAZ,CAAoB8L,IAAI,IAAI;EAC1BxB,IAAAA,GAAG,CAACwB,IAAD,CAAH,GAAY,UAAS5I,EAAT,EAAa2M,UAAb,EAAyB;EACnC,UAAI/D,IAAI,KAAK,WAAb,EAA0B;EACxB;EACA;EACA;EACA;EACA+D,QAAAA,UAAU,GAAG,KAAKxJ,OAAL,CAAasI,KAAb,CAAmBC,MAAnB,CAA0BiB,UAA1B,CAAb;EACD,OAPkC;;;EAcnC,WAAKxJ,OAAL,CAAayF,IAAI,GAAG,GAApB,EAAyB5I,EAAzB,IAA+B2M,UAA/B;EACD,KAfD;EAgBD,GAjBD;EAkBD;;ECjBM,SAASC,aAAT,CAAwBxF,GAAxB,EAA6B;EAClC;EACAA,EAAAA,GAAG,CAACjE,OAAJ,GAAc,EAAd;EAEA8H,EAAAA,WAAS,CAAC7D,GAAD,CAAT,CAJkC;EAOlC;EACA;EACA;EACA;EACA;EAEA;;EACAqF,EAAAA,WAAW,CAAC3P,OAAZ,CAAoB8L,IAAI,IAAI;EAC1BxB,IAAAA,GAAG,CAACjE,OAAJ,CAAa,GAAEyF,IAAK,GAApB,IAA0B,EAA1B;EACD,GAFD;EAIAxB,EAAAA,GAAG,CAACjE,OAAJ,CAAYsI,KAAZ,GAAoBrE,GAApB,CAlBkC;;EAoBlCiF,EAAAA,UAAU,CAACjF,GAAD,CAAV,CApBkC;;EAsBlCsF,EAAAA,iBAAiB,CAACtF,GAAD,CAAjB;EAED;;ECvBD,SAASA,GAAT,CAAcjE,OAAd,EAAuB;EACrB,OAAK+H,KAAL,CAAW/H,OAAX;EACD;EAGD;;;EACA8H,SAAS,CAAC7D,GAAD,CAAT;EACA0E,WAAW,CAAC1E,GAAD,CAAX;EACAD,cAAc,CAACC,GAAD,CAAd;EAKA;EAEA;;EACAwF,aAAa,CAACxF,GAAD,CAAb;EAMA;EAEA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EAEA;EACA;;;;;;;;"}